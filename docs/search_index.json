[
["index.html", "Biostatistika Kurso svetainė Pradžia", " Biostatistika Kurso svetainė Vilmantas Gėgžna Pradžia Medžiaga atnaujinta: 2019-02-10 Šios svetainės turiniui taikoma tarptautinė Creative Commons 4.0 (Priskyrimas – Nekomercinis platinimas – Analogiškas platinimas) licencija, nebent šalia konkretaus elemento nenurodyta kitaip. Jei konkretus elementas (pvz., paveikslas) yra paimtas iš kito šaltinio (parašyta šalia elemento arba pateikta nuoroda), tada jam taikoma pradiniame šaltinyje apibrėžta licencija. "],
["apie.html", "Apie Apie šią svetainę Reikalavimai studentui", " Apie Apie šią svetainę Šioje svetainėje pateikiama pagalbinė medžiaga kurso „Biostatistika“ (2019) bei „Biometrija“ (2019) pratyboms. Šio kurso metu susipažinsime su statistinei duomenų analizei naudojamais įrankiais, tokiais kaip: Programa „R“; Patogesniam darbui su „R“ skirta aplinka (programa) „RStudio“: \\(R \\neq RStudio\\)! Ataskaitų rengimui skirtomis „R“ galimybėmis, pvz., „R Markdown“ dokumentais. Svetainės valdymas klavišais Šios svetainės valdymas klaviatūra: Norėdami paslėpti (ar vėl rodyti) turinį, paspauskite klavišą S. Naudodami rodykles ← ar →, galite pereiti į kitą temą. Norėdami atlikti paiešką visoje svetainėje, paspauskite klavišą F. Funkcija veikia ne visose naršyklėse. Pastabos Pastaba 1. Kiekvieno skyriaus gale yra vieta (DISQUS forumas), kurioje galite pateikti komentarą, patarimą, pastabą ar klausimą. Būkite mandagūs, tolerantiški, supratingi, laikykitės raštvedybos ir kitų universiteto studentams prideramų taisyklių. Pastaba 2. Svetainėje esanti mokomoji medžiaga yra orientuota į operacinės sistemos „Windows“ naudotojus. Kitų sistemų naudotojams kai kurios instrukcijos gali šiek tiek skirtis. Pastaba 3. Lokalė – kompiuteryje ir jo programinėje įrangoje naudojamų elementų, priklausančių nuo kalbos ir kultūros normų, visuma (šaltinis: ). Paprasčiau sakant – tai nuo kalbos ir vietovės priklausančios programų bei dokumentų savybės, pvz., mėnesių pavadinimai skirtingomis kalbomis. Detalesnį paaiškinimą galite rasti enciklopediniame kompiuterijos žodyne . Daugelis šioje svetainėje rodomų pavyzdžių pateikti darant prielaidą, kad programoje „R“ pasirinkta lietuviškoji lokalė, kurią nustatyti galite naudodami programos „R“ komandą: # „Windows“ naudotojams Sys.setlocale(locale = &quot;Lithuanian&quot;) # „Mac OS“ ir kai kurioms „Linux“ versijoms Sys.setlocale(locale = &quot;lt_LT.UTF-8&quot;) Sys.setlocale(locale = &quot;lt_LT.utf8&quot;) „Linux“ sistemų naudotojai visas įdiegtas lokales gali sužinoti parašę komandą system(&quot;locale -a&quot;). Įprastai lokalę reikia pakeisti kiekvieną kartą perkrovus programą „R“. Jei programoje „R“ nustatyta lokalė veikia neteisingai, įsitikinkite, kad jūsų kompiuterio operacinės sistemos lokalė taip pat lietuviška (kai kuriais atvejais, operacinės sistemos lokalė gali užgožti programoje „R“ nustatytąją). Dėžučių reikšmės Knygoje naudojamų spalvotų dėžučių reikšmės: Informacija. Užduotys. Rekomendacija arba pastaba. Pastaba. Įspėjimas ir vengtini dalykai. Reikalavimai studentui Įgūdžiai Anglų kalba (gebėjimas analizuoti literatūrą, audio ir video šaltinius). Darbo kompiuteriu įgūdžiai: elementaraus kompiuterinio raštingumo įgūdžiai; gebėjimas internete susirasti reikiamą informaciją: „Google Search“, „YouTube“, t.t.; gebėjimas pagal instrukcijas parsisiųsti ir įsidiegti reikiamas programas. Reikmenys pratyboms Nuosavos ausinės pratybų metu (privaloma). Kompiuteris su „Windows“, „Linux“ arba „Mac OS“ operacine sistema. Arba prieiga prie tokio kompiuterio namų darbams atlikti. Reikmenys paskaitoms (Rekomenduojama) Išmanusis įrenginys (telefonas, planšetė, …) arba kompiuteris: turintis prieigą prie interneto (galintis prisijungti prie tinklalapių quizizz.com/join ir kahoot.it ); kurio baterija įkrauta pakankamai arba turėti krovimo laidą. "],
["diegimas.html", "1. Programų diegimas ir nustatymai 1.1 Apie programą R 1.2 Pastabos prieš diegiant 1.3 Pagrindinės programos 1.4 R paketų diegimas 1.5 Programų konfigūravimas 1.6 Papildomos instrukcijos 1.7 Paskyros Klausimai ir komentarai", " 1. Programų diegimas ir nustatymai 1.1 Apie programą R „R“ – tai duomenų analizei skirta kompiuterinė programa (pav. 1.1), turinti ir interaktyvios duomenų analizės, ir programavimo galimybes. Pagal savo paskirtį „R“ orientuota į (statistinę) duomenų analizę ir duomenų vaizdinimą. Tačiau programos funkcionalumą smarkiai išplečia daugybė (virš 14000!) papildinių, dar vadinamų paketais, kurie leidžia spręsti įvairioms mokslo šakoms aktualius skaičiavimo, duomenų pertvarkymo, parengimo analizei bei vaizdinimo uždavinius, kurti automatizuotas ataskaitas ir pateikti jas įvairiomis formomis, pvz., internetinio tinklalapio ar „Microsoft Word“ formatu, rašyti mokslinius straipsnius, net knygas! Ši mokomoji medžiaga taip pat sukurta naudojantis „R“. Pav. 1.1: Programos „R“ logotipas . Programa „R“ – GNU projekto dalis, yra visiškai nemokama ir laisvai platinama. Jos vystymu rūpinasi „R“ fondas (The R Foundation). Daugiau informacijos apie programą rasite svetainėje www.r-project.org. Jei programos ir jai skirtų papildinių dar neturite, toliau bus rašoma, kaip juos parsisiųsti ir įsidiegti į savo kompiuterį. Įspėjimas: programa „R“ nėra pakaitalas jūsų smegenų darbui. Tikslas – atsisiųsti, įsidiegti ir susikonfigūruoti programas „R“, „RStudio“ ir bei svarbiausius „R“ papildinius, vadinamus paketais. 1.2 Pastabos prieš diegiant Kelios bendrosios pastabos prieš diegiantis programas. Pastaba 1. Šiame skyriuje nurodytos programos yra visiškai nemokamos naudoti akademiniais tikslais. Pastaba 2. Ši svetainė (ir joje esančios instrukcijos) orientuota į operacinės sistemos „Windows“ vartotojus. Kitų sistemų vartotojams kai kurios instrukcijos gali skirtis. Pastaba 3. Diegiantis programas procesai vyks greičiau, jei bus įjungtas sparčiojo veikimo režimas (angl., high performance), išjungtas kompiuterio energijos taupymas bei įjungtas kompiuterio krovimo laidas (žr. skyriuje „Sparčiojo veikimo režimas“). Ši pastaba galios ir tada, kai programa „R“ atliksite skaičiavimus. Tad pratybų metu naudodami savo kompiuterį naudokite ir krovimo laidą. Pastaba 4. Aplanko, į kurį bus įdiegtos programos „R“, „RStudio“ bei jų papildiniai, pavadinimuose esančios raidės gali būti tik angliškos, t. y., nei vienoje pavadinimo dalyje negali būti nei lietuviškų, nei rusiškų, nei kiniškų ar kitokių neangliškų simbolių: BLOGAI: C:/ĄĄĄĄČĘ C:/žurnalas/programos/R C:/dokumentai/Žygimantas/R D:/biostatistiką/R TINKA: C:/AAAACE C:/zurnalas/programos/R C:/dokumentai/Zygimantas/R D:/biostatistika/R Įsidiegti pavyks, bet kils problemų dirbant. Tad pasirinkite tinkamą aplanko pavadinimą. Kita pastaba taikytina tik tada, jei paketus diegiate pakartotinai. Pastaba 5. Jei programos „R“ paketus diegti nusprendėte darbo metu, perkraukite programą „R“, kad neliktų užkrautų paketų, kurie trukdytų diegimui ar atnaujinimui. Rekomenduojama apskritai uždaryti „RStudio“ projektą, jei jį buvote atidarę. Pastaba 6. Jei diegiant paketus įvyko klaida, perskaitykite, ką programa „R“ parašė. Jei nesuprantate žinutės esmės ar nežinote sprendimo, naudokite „Copy-Paste-Google“ metodą (nukopijuokite klaidos žinutės esmę į „Google“ internetinės paieškos sistemą ir atsakymą raskite internete). Tai bene greičiausias būdas rasti sprendimą. 1.3 Pagrindinės programos Video medžiagoje 1.1 pateikti pavyzdžiai, kaip atsisiųsti, įsidiegti ir atsidaryti reikiamas programas. Epizodas buvo skirtas ankstesnių metų kursui, todėl rodoma, kaip įsidiegti šiek tiek senesnes programų versijas. Tačiau esmė liko ta pati. Epizodo pabaigoje (po 9:58 min.) esanti informacija jau nebeaktuali. Nuorodos į reikiamus tinklalapius pateiktos kituose skyriuose. Jei kyla neaiškumų, naudingos nuorodos pateiktos skyriuje 1.6. Video medžiagą žiūrėdami pagreitintai – bent ×1,5 greičiu – taupysite laiką. Rekomenduojamas peržiūros greitis – ×2. Video epizodas 1.1 Video instrukcijos: „R“, „RStudio“, „Pandoc“ atsisiuntimas ir diegimas. Programos „Pandoc“ kol kas diegtis nereikia, nes ji yra „RStudio“ dalis. Be to, naujausioje „Pandoc“ versijoje (v2.5) yra strigtis, trukdanti sklandžiai dirbti. 1.3.1 Programa R Pirmiausia parsisiųsite programą „R“. Be jos negalėsite atlikti analizės. Programą rasite svetainėje https://cloud.r-project.org/ Pav. 1.2: Programos „R“ parsisiuntimas. Nueikite į svetainę https://cloud.r-project.org/. Atsidarys langas, kurio fragmentą matote A dalyje. Pasirinktie nuorodą pagal savo kompiuterio operacinę sistemą („Linux“, „Mac“ ar „Windows“). Naujai atsidariusiame lange (B) rinkitės „base“ (bazinis „R“ paketas). Kitame lange (C) bus rodoma naujausia „R“ versija (tarkim, 3.5.2). Spauskite „Download“ ir pradėkite siųstis programą. Pastaba: dabartinė programos versija yra naujesnė nei 3.4.1. Diegdami „R“ atkreipkite dėmesį į du dalykus: Pasirinkite aplanką, kurio pavadinime esančios raidės yra tik angliškos, t. y., nėra nei lietuviškų, nei rusiškų, nei kiniškų simbolių. Į aplanką, kurio pavadinime yra ne angliškų raidžių, programas įdiegti pavyks, bet vėliau dirbant kils problemų ir net neatrodys, kad jos kyla dėl aplanke esančių raidžių. Pasirinkite jūsų kompiuteriui tinkamas programos 32 ar 64 bitų bylų versijas, kaip pavaizduota paveiksle 1.3. Pav. 1.3: Programos „R“ diegimas. Programos branduolio („Core“) bylas įdiegti būtina. Taupantiems vietą kietajame diske: pasirinkite įsidiegti arba vien tik 64 bitų (A), arba 32 bitų (B) versiją, kuri labiau tinkama jūsų kompiuteriui. Jei jūsų kompiuteris naujesnis nei 3 metų senumo, rinkitės 64 bitų versiją. Jei dvejojate, kurią rinktis, rinkitės abi. Užduotis 1.1 Atsisiųskite ir įsidiekite programą „R“. 1.3.2 Programa RStudio Programa „RStudio“ yra darbui su „R“ skirta aplinka (angl. integrated development environment, IDE), skirta programai „R“. Trumpai tariant, tai kita programa, kuri palengvina darbą su „R“. Yra 2 „RStudio“ tipai: Desktop (skirtas asmeniniam kompiuteriui) ir Server (skirtas serveriui). Mums reikalingas pirmasis. Parsisiųsti galime iš: https://www.rstudio.com/products/rstudio/download/ (pav. 1.4). Pav. 1.4: Programos RStudio parsisiuntimui skirto tinklalapio fragmentas. Tinklalapio apačioje yra skiltis „RStudio Desktop“, kurioje išvardintos asmeniniam kompiuteriui skirtos versijos: pasirinkite tą, kuri pritaikyta jūsų kompiuterio operacinei sistemai („Linux“, „Mac“ ar „Windows“). Pastaba: dabartinė programos versija yra naujesnė nei 1.1.419. Užduotis 1.2 Atsisiųskite ir įsidiekite naujausią programos „RStudio“ versiją. 1.3.3 Mac naudotojams Sistemos Mac naudotojams papildomai reikia atsisiųsti ir įsidiegti programą XQuartz, nes be jos neveiks papildinys R Commander. Daugiau instrukcijų galite rasti šiame tinklalapyje: nuoroda . Įsidiegę šią programą perkraukite kompiuterį ir tik tada tęskite darbą. 1.4 R paketų diegimas Paketas, tai standartizuotas „R“ papildinys, praplečiantis programos galimybes. Apie šiuos papildinius plačiau bus rašoma skyriuje „5 R paketai“. Dabar išmoksite atsisiųsti labiausiai reikalingus. Atsidarykite programą „RStudio“ ir į langą, pavadintą „Console“, nukopijuokite iš karto visas žemiau parašytas „R“ paketų diegimo komandas ir paspauskite Enter klavišą. Bus įdiegti nurodyti „R“ paketai. Įprasta, jei parsisiuntimo ir diegimo procesas užtruks iki 20-40 minučių ir prireiks apie 1 GB vietos kietajame diske. Jei interneto ryšys arba kompiuterio veikimas yra lėti, diegimas gali užtrukti ilgiau. Paketų diegimą tęskite iki galo, neišjunkite programos viduryje nebaigto proceso. Pavyzdys, kaip įdiegiamas paketas devtools, pateiktas pav. 1.5. Pav. 1.5: R paketo devtools diegimas programiškai. Lange „Console“ \\((A)\\) parašomas/įklijuojamas programos kodas \\((B)\\) ir paspaudžiamas klavišas Enter. Atsiranda „STOP“ ženkliukas \\((C)\\), užrašai, rodantys, kad paketai parsiunčiami ir diegiami \\((D)\\) bei atsisiuntimo progreso juosta, kuri iššoka daugybę kartų (čia neparodyta). Sėkmingai įsidiegus paketui, atsiranda apie tai pranešantys užrašai \\((E)\\), išnyksta „STOP“ ikona bei atsiranda „&gt;“ ženkliukas \\((F)\\), rodantis, kad „R“ laukia naujos komandos. Jei paketas nebūtų įdiegtas sėkmingai, „R“ taip pat parašytų priežastį. Jei dega „STOP“ ženkliukas, bet atrodo, kad diegimas nevyksta, įsitikinkite, kad nėra lentelės, pavaizduotos pav. 1.6 (ši lentelė gali būti „pasislėpusi“ už kitų langų) bei kad programa nelaukia jūsų sprendimo (pav. 1.7). Pav. 1.6: „R“ siūlo paketus įdiegti į asmeninę biblioteką. Pamatę analogišką lentelę, įsitikinkite, kad aplanko pavadinime nėra neangliškų (pvz., lietuviškų) raidžių ir spauskite „Yes“. Pav. 1.7: R klausia, ar įdiegti paketus, kuriuos reikia kompiliuoti (atlikti procedūrą, kurios pagalba paketai pritaikomi veikti jūsų kompiuteryje). Jei pasirodys analogiškas klausimas, įrašykite raidę „y“ ir paspauskite „Enter“. Naudojant naujausią „R“ versiją, vietoje 1.7 pav. vaizduojamų komandų iššoks lentelė panaši į pavaizduotąją pav. 1.6. Paketus diegiantis pirmą kartą tokio tipo lentelė įprastai iššoka 2 kartus. Kodas reikiamiems paketams diegti (visas kita spalva pažymėtas blokas): # R paketų diegimo komandos # Paketų diegimas iš saugyklos CRAN ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ # Paketų parsisiuntimui install.packages(c(&quot;remotes&quot;, &quot;devtools&quot;, &quot;ctv&quot;)) # Rekomenduojami R paketai list_of_packages &lt;- c( # Vizualizavimui/Grafikams &quot;ggplot2&quot;, &quot;ggpubr&quot;, &quot;ggrepel&quot;, &quot;ggthemes&quot;, &quot;plotly&quot;, &quot;cowplot&quot;, &quot;qqplotr&quot;, # Kiti &quot;data.table&quot;, &quot;BBmisc&quot;, &quot;checkmate&quot;, &quot;infer&quot;, &quot;aplpack&quot;, &quot;arm&quot;, &quot;coda&quot;, &quot;leaps&quot;, &quot;lmtest&quot;, &quot;matrixcalc&quot;, &quot;sem&quot;, &quot;TH.data&quot;, &quot;rgl&quot;, &quot;mi&quot;, &quot;multcomp&quot;, &quot;mvtnorm&quot;, &quot;car&quot;, &quot;carData&quot;, &quot;RCurl&quot;, &quot;openxlsx&quot;, &quot;tidyselect&quot;, &quot;readxl&quot;, &quot;forcats&quot;, &quot;dplyr&quot;, &quot;stringi&quot;, &quot;stringr&quot;, &quot;tidyr&quot;, &quot;broom&quot;, &quot;tidyverse&quot;, &quot;skimr&quot;, &quot;rcompanion&quot;, &quot;sigr&quot;, &quot;fs&quot;, &quot;DescTools&quot;, &quot;shiny&quot;, &quot;PMCMR&quot;, &quot;PMCMRplus&quot;, &quot;officer&quot;, &quot;flextable&quot;, &quot;pander&quot;, &quot;descriptr&quot;, &quot;vcd&quot;, &quot;vcdExtra&quot;, &quot;fitdistrplus&quot;, &quot;Rcmdr&quot;, &quot;RcmdrMisc&quot;, &quot;RcmdrPlugin.EZR&quot;, &quot;RcmdrPlugin.KMggplot2&quot; ) # Rekomenduojamų paketų diegimas install.packages(list_of_packages, dependencies = c(&quot;Depends&quot;, &quot;Imports&quot;)) # Paketų diegimas pagal temas ctv::update.views(c(&quot;ReproducibleResearch&quot;, &quot;Graphics&quot;)) # Paketų diegimas iš GitHub saugyklų ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remotes::install_github(&quot;GegznaV/RcmdrPlugin.EZR@unmodified_Rcmdr_menu&quot;, upgrade = FALSE) remotes::install_github(&quot;GegznaV/addin.tools&quot;, upgrade = FALSE) remotes::install_github(&quot;GegznaV/addins.rmd&quot;, upgrade = FALSE) remotes::install_github(&quot;GegznaV/addins.rs&quot;, upgrade = FALSE) remotes::install_github(&quot;Rapporter/pander&quot;, upgrade = FALSE) remotes::install_github(&#39;stefano-meschiari/latex2exp&#39;, upgrade = FALSE) remotes::install_github(&quot;tidyverse/dplyr@rc_0.8.0&quot;, upgrade = FALSE) remotes::install_github(&quot;ropenscilabs/skimr&quot;, ref = &quot;v2&quot;, upgrade = FALSE) # Pranešimas baigus diegti ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ message(&quot;Atlikta!&quot;) Paketus rvg ir ggstatsplot bandykite diegti po vieną. „Linux“ ir „Mac“ naudotojams gali reikti papildomų programų ar leidimų. Gali padėti informacija, esanti šiuose tinklalapiuose: https://indrajeetpatil.github.io/ggstatsplot/ https://github.com/davidgohel/rvg install.packages(&quot;rvg&quot;) install.packages(&quot;ggstatsplot&quot;) Jei kils neaiškumų ar nesklandumų peržiūrėkite skyriuose 1.4.1 ir 1.6 pateiktą informaciją. Taip pat padarykite ekrano nuotraukas (angl. print screen), nukopijuokite kitą svarbią informaciją, kurią galėtumėte pratybų metu parodyti dėstytojui. Užduotis 1.3 Įsidiekite nurodytus programos „R“ paketus. Jei kils problemų, skaitykite skyrių žemiau. 1.4.1 Kilus problemų dėl paketų diegimo… Jei jums neleidžiama diegti „R“ paketų dėl to, kad „R“ rekomenduojamos bibliotekos (aplanko) pavadinime yra lietuviškų raidžių, gali padėti pav. 1.8 esanti informacija, kaip nurodyti kitą aplanką diegimui. ATSARGIAI: tai pažengusiųjų lygio modifikacijos sistemai „Windows“. Atidarytuose languose nieko papildomai nekeiskite ir neištrinkite, nebent suprantate, ką darote. Pav. 1.8: Numatytojo aplanko „R“ paketams (bibliotekos) keitimas. Jums paieškos lange reikia rasti ir atsidaryti „Advanced system settings“ kortelę. joje pasirinkti „Environment variables“ (aplinkos kintamieji). Aplinkos kintamųjų kortelėje pasirinkti naują vartotojo aplinkos kintamąjį. Naudotojo naujo aplinkos kintamojo kortelėje („New user variable“) esančiame laukelyje „Variable name“ \\((A)\\) reikia įrašyti „R_LIBS_USER“, o laukelyje „Variable value“ \\((B)\\) – aplanko, į kurį turi būti diegiami paketai, pavadinimą. Pavadinimą galima įrašyti, įkopijuoti arba susirasti naudojant „Browse Directory“ (naršyti aplankuose) mygtuką. Tai – pažengusiųjų lygio modifikacijos, tad būkite atidūs ir keiskite tik tai, ką keisti būtina. Išsaugoję nustatymus, kompiuterį perkraukite. PASTABA. Pakeitus šiuos nustatymus būtina perkrauti (angl. restart) kompiuterį ir tik tada tikrinti, ar jie išsprendė problemą. 1.5 Programų konfigūravimas 1.5.1 Sparčiojo veikimo režimas Dirbant duomenų analizės programomis kai kurie veiksmai reikalauja didelių skaičiuojamųjų kompiuterio resursų. Jei įjungtas energijos taupymo režimas, skaičiavimai užtruks ilgiau nei reikėtų. Todėl atliekant analizę siūlau: Įsijungti sparčiojo veikimo (angl. high-performance) režimą ir išjungti energijos taupymą. Taip skaičiavimai, paveikslų braižymas, didelių duomenų lentelių išsaugojimas bei panašūs veiksmai bus atlikti greičiau. Visgi žinokit, kad šiuo režimu kompiuteris vartoja daugiau energijos, ir dirbant „iš baterijos“ – greičiau išsikraus. Dirbti prisijungus kompiuterio krovimo laidą. Galima nustatyti, kad prisijungus laidą automatiškai būtų aktyvuojamas sparčiojo veikimo režimas. Windows 10 Pavyzdys, kaip operacinėje sistemoje „Windows 10“ pasirinkti sparčiojo veikimo režimą (planą), pateiktas pav. 1.9 bei šioje video medžiagoje: . Pav. 1.9: Pavyzdys, kaip sistemoje „Windows 10“ įsijungti sparčiojo veikimo režimą. Susiraskite baterijos ikoną darbalaukio meniu juostoje (1) ir paspauskite ją dešiniuoju pelės klavišu (2). Atsidariusiame meniu pasirinkite „Power Options“ arba atitikmenį kita kalba (3). Atsidarys langas, kuriame susiraskite ir pasirinkite sparčiojo veikimo režimą (planą), pvz., (A). Mano kompiuteryje yra 2 šio tipo planai (A, B). Jei rodomi ne visi – spauskite (C). Jei nėra reikiamo plano, jį susikurkite. Video pavyzdys: . 1.5.2 RStudio: UTF-8 koduotė dokumentams Parsisiuntę programą „R Studio“, ją susikonfigūruokite. Vienintelis privalomas nustatymas yra UTF-8 koduotės pasirinkimas dokumentams. (Jei nenustatysite UTF-8, dokumentuose negalėsite matyti lietuviškų, rusiškų ar kitokių anglų kalboje nenaudojamų simbolių.) Visi kiti nustatymai – tik rekomenduojami dėl patogumo. Detalios instrukcijos video medžiagoje, santrauka – paveiksle žemiau. Tam, kad išvengtume kai kurių problemų, susijusių su lietuvių kalbos atpažinimu, parinktį RStudio → Tools → Global Options → Code → Saving → Default text encoding nustatykite į UTF-8. Pav. 1.10: Schema, demonstruojanti, kaip pasirinkti, kad bylos RStudio aplinkoje būtų nuskaitomos naudojant UTF-8 standartą. 1.5.3 RStudio: kiti nustatymai Visos kitos šiame skyriuje siūlomos parinktys yra rekomendacinio pobūdžio. Video epizode 1.2 rodoma, kaip sukonfigūruoti RStudio, kurios versija 1.0.x (x – versijos papildymo numeris). Todėl naudojant naujausią 1.1.x ar 1.2.x versiją, nustatymų išdėstymas ir ikonų paveikslai skiriasi, tačiau principai liko tie patys. Video medžiagą žiūrėdami pagreitintai – bent ×1,5 greičiu – taupysite laiką. Rekomenduojamas peržiūros greitis – ×2. Video epizodas 1.2 Programos „RStudio“ parengimas darbui (konfigūravimas). Pav. 1.11: Priedas prie video medžiagos: rekomenduojama programos „R Studio“ (versija 1.2) konfigūracija. Geltonai pažymėti nustatymai, kurie skiriasi nuo numatytųjų. (Dėkoju Stepan Avdevič už pagalbą rengiant iliustraciją.) Norintys daugiau paaiškinimų, ką reiškia konkretūs nustatymai, juos gali rasti straipsnyje „Customizing RStudio“ . Užduotis 1.4 „RStudio“ nustatykite UTF-8 koduotę atidaromoms byloms. Pagal rekomendacijas atlikite kitus „RStudio“ konfigūracijos veiksmus. 1.6 Papildomos instrukcijos Papildomų programų diegimo instrukcijų, kurios gali būti naudingos visų operacinių sistemų naudotojams, galite rasti: straipsnyje „Installing R and RStudio - Easy R Programming“ – bendrieji „R“ ir „RStudio“ diegimo klausimai „Windows“, „Linux“ ir „Mac“ sistemoms; tinklalapyje „R Commander Installation Notes“ – su papildinio „R Commander“ (paketas Rcmdr) diegimu susiję klausimai. 1.7 Paskyros 1.7.1 „Emokymai“ sistema Jūs vasario 4 d. automatiškai būsite prijungti prie kurso „Biostatistika ir biometrija“ VU „Emokymai“ sistemoje. Iš šios sistemos į VU studento el. pašto dėžutę bus siunčiami pranešimai, todėl dėžutę tikrinkite reguliariai. 1.7.2 „Data Camp“ paskyra Jums į VU studento el. pašto dėžutę bus atsiųstas pakvietimas nemokamai prisijungti prie mokomosios medžiagos „DataCamp“ sistemoje. Pakvietimą privalote priimti per 2 savaites nuo kurso pradžios. Jei laiško negausite per 1 savaitę nuo kurso pradžios, kreipkitės į teorinės dalies dėstytoją. 1.7.3 „GitHub“ paskyra Norint atlikti kai kurias papildomas užduotis, reikės paskyros svetainėje https://github.com. Pastaba: paskyra šioje svetainėje yra tarsi jūsų, kaip profesionalo, vizitinė kortelė. Žmonės, norintys parodyti savo programavimo ir duomenų analizės žinias, susikuria savo demonstracinių ar realių projektų portfelį. Užduotis 1.5 Susikurkite „GitHub“ paskyrą. Įsiminkite naudotojo vardą ir slaptažodį. Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["pradines-savokos.html", "2. Pradinės duomenų analizės sąvokos 2.1 Statistinio tyrimo ciklas 2.2 Svarbiausia analizės dalis – klausimas 2.3 Generalinė aibė, imtis ir duomenys 2.4 Statistikos mokslas ir jo dalys 2.5 Kintamųjų tipai statistikoje 2.6 Duomenų saugojimo formos 2.7 Duomenų eilutės 2.8 Duomenų lentelės Klausimai ir komentarai", " 2. Pradinės duomenų analizės sąvokos Šiame skyriuje susipažinsime su svarbiausiomis duomenų analizės sąvokomis. 2.1 Statistinio tyrimo ciklas Statistinio tyrimo eigą galime suskirstyti į 5 sąlygines dalis (pav. 2.1). Pav. 2.1: Statistinio tyrimo ciklas. Glaustas kiekvienos ciklo dalies apibūdinimas: Klausimas. Pirmiausia, iškeliame klausimą, susiformuluojame mokslinę problemą, kad žinotume, ką norime padaryti, į kokį klausimą atsakyti, kokią problemą išspręsti savo analize. (Žiūrėkite kitame poskyryje). Be klausimo nėra ir analizės tikslo. Planas. Kai jau žinome klausimą, galime susiplanuoti, kaip į jį atsakysime. Vėlesni tyrimo etapai negali atsverti ir ištaisyti prastai suplanuoto bei nekorektiškai atlikto tyrimo pasekmių. Duomenys. Surenkame duomenis, kurie yra tinkami atsakyti į išsikeltą klausimą. Duomenis parengiame analizei. Analizė. Padarome duomenų suvestines. Pagal klausimą ir duomenų savybes pasirenkame tinkamą tolimesnės analizės metodą. Atliekame šią analizę. Išvados. Grįsdami analizės rezultatais, padarome išvadas – atsakome į iškeltą klausimą. Įprastai gavus atsakymą į vieną klausimą, kyla dar keletas naujų klausimų. Tad toliau bandant atsakyti į naujuosius klausimus susidaro ciklas. Jei reikėtų pasirinkti, kas svarbiau atliekant tyrimą – analizės metodas, tinkami duomenys, tyrimo planas ar klausimas,– jūs turėtumėte aiškiai žinoti, kad pagal svarbą šie dalykai išsirikiuoja šitaip: klausimas (ir tikslas) → tyrimo planas → tinkami duomenys → analizės metodas. Jei neaišku kodėl – tada dar kartą perskaitykite kiekvienos statistinio tyrimo ciklo dalies apibūdinimą. 2.2 Svarbiausia analizės dalis – klausimas Prieš pradedant duomenų analizę, reikia aiškiai žinoti, kokiu tikslu ji yra daroma. Ir pagrindinis analizės tikslas – spręsti tam tikrą mokslinę, socialinę, verslo, medicininę, gamtinę ar kitokią realaus gyvenimo problemą bei atsakyti į tam tikrą specifinį klausimą, kuris buvo suformuluotas prieš atliekant analizę. Pvz., kuris šokoladas Lietuvos žmonėms labiau patinka (juodasis, pieniškas ar baltasis); kokią įtaką vienas papildomas euras, išleistas ledų reklamai, darytų įmonės pelnui; ar GMC studentai greičiau įsisavina kurso medžiagą, jei prie įprastos rašytinės medžiagos papildomai pateikiama video medžiaga; kurioje terpėje dumbliai greičiau auga; ar naujai kuriamas vaistas gali pailginti miego trukmę; ar pagal fenotipinius požymius galima atpažinti bakterijos genotipinius Gardnerella vaginalis pogrupius; ar kovų baidymas padeda reikšmingai sumažinti paukščių keliamą triukšmą Panevėžio mieste? Analizė, neturinti klausimo ir nesprendžianti problemos yra bevertė, nes neturi tikslo („analizė dėl analizės“). Tad tinkamas aiškiai ir konkrečiai suformuluotas klausimas – pati svarbiausia visos analizės dalis. Pav. 2.2: Klausimas – pati svarbiausia duomenų analizės dalis, nes suteikia analizei tikslą. Tinkamas aiškiai ir konkrečiai suformuluotas klausimas – pati svarbiausia tyrimo dalis. 2.3 Generalinė aibė, imtis ir duomenys Statistikoje yra keli svarbūs pradiniai terminai: generalinė aibė (populiacija), imtis bei duomenys (pav. 2.3). Pav. 2.3: Generalinė aibė, imtis ir duomenys. Iš visos tyrimo metu analizuojamos objektų visumos (generalinės aibės, GA) visiškai atsitiktinai arba kitu tikimybiniu būdu sudarome tiriamųjų imtį (paimame dalį GA). Tada išmatuojame ar užregistruojame vieną arba kelis mus dominančius tiriamųjų požymius ir taip gauname duomenis (duomenų imtį). Generalinė aibė (GA), arba populiacija (statistikos prasme),– tai statistinio tyrimo metu nagrinėjama objektų (arba jų savybių) visuma. Imtis – tai į tyrimą patekusi GA dalis (į tyrimą patekę objektai). Duomenys – tai imties objektų savybių reikšmės. Savybės gali būti kokybinės (pvz., spalva) bei kiekybinės (pvz., svoris). Imties dydis – tai imtyje esančių elementų (objektų, tiriamųjų, stebėjimų) skaičius. Pavyzdys. GA – tai visi 4-5 m. amžiaus naminiai šunys, imtis – tai į tyrimą patekę 4-5 m. amžiaus naminiai šunys, duomenys – į tyrimą patekusių šunų kailio spalva: šviesi, tamsi, marga, … Statistiniam tyrimui tinkama imtis privalo būti pakankamo dydžio ir reprezentatyvi. Reprezentatyvi imtis yra tokia, kurioje pakankamai tiksliai atsispindi visos GA savybės. Tai tarsi maža GA kopija. Imtis turi būti reprezentatyvi tai GA, apie kurią daromos statistinės išvados. Kitu atveju išvados bus klaidingos. T. y., jei imtyje yra tik vyresni nei 60 m. amžiaus vyrai, tai didelis klausimas, ar ištyrę juos galime daryti išvadas apie visus žmones, tarp kurių yra ir moterys, vaikai, kūdikiai bei jaunimas. Per mažo dydžio imtys yra nereprezentatyvios ir iš jų padarytos išvados, tikėtina, bus klaidingos. Vien tik didelis imties dydis irgi negarantuoja reprezentatyvumo, jei imtis sudaryta netinkamu būdu. Kelios pastabos: Atkreipkite dėmesį į tai, kad terminas „populiacija“ statistikoje reiškia ne tą patį, ką biologijoje, todėl, vengiant dviprasmybės, Lietuvių kalba yra aprobuotas kitas statistinis terminas („populiacijos“ sinonimas) – generalinė aibė (GA). Terminas „imtis“ gali reikšti ir tiriamųjų imtį (pvz., į tyrimą įtraukti 4-5 m. amžiaus naminiai šunys) ir duomenų imtį (pvz., tyrimo metu užregistruota kiekvieno iš šių šunų kailio spalva). 2.4 Statistikos mokslas ir jo dalys Statistikos mokslą galima apibūdinti kaip tikslųjį mokslą (matematikos šaką) apie tyrimo planavimą, duomenų rinkimą, sisteminimą, kiekybinę analizę bei rezultatų interpretavimą. Biostatistika ir biometrija yra taikomosios statistikos šakos, orientuotos į medicininių ir biologinių duomenų analizę. Statistikos metodus galima suskirstyti į 3-4 pagrindines dalis, tokias kaip: Tyrimo planavimas (angl. study/experimental design) – prieš vykdant tyrimą, visa eiga turi būti kruopščiai suplanuojama: suplanuojama tai, kaip bus sudaryta tiriamųjų imtis, kuri yra tinkama atsakyti į pagrindinį tyrimo klausimą, kokio dydžio ši imtis turėtų būti, kaip bus renkami duomenys, kokius metodus ar bent jau kokio tipo metodus naudosime analizei; Aprašomoji statistika (angl. descriptive statistics) – grafiniai ir skaitiniai duomenų sisteminimo metodai. Jais apibūdiname esmines surinktų duomenų savybes, o tai padeda pasirinkti tolimesnę analizės eigą; Statistinių išvadų darymas (angl. inferential statistics) bei prognozavimas (angl. prediction) – analizės ir interpretavimo metodai, pagal imties duomenis leidžiantys daryti išvadas apie visą GA ir/arba prognozuoti. Tyrimo eiga nuo imties sudarymo iki statistinių išvadų ir prognozavimo gali būti atvaizduojama paveikslu 2.4: tam, kad statistinės išvados būtų pagrįstos, imtis turi būti sudaryta tinkamai – būti pakankamo dydžio ir reprezentatyvi, t.y., pagal savo sudėtį ir savybes proporcinga visai generalinei aibei. Pav. 2.4: Sąsaja tarp imties sudarymo, aprašomosios statistikos bei statistinių išvadų darymo ir prognozavimo. „Statistikos uždavinys – aiškiai pasakyti tiesą: (pakankamai) tiksliai ir suprantamai.“ — Stephen McCurdy 2.5 Kintamųjų tipai statistikoje Statistikoje „kintamaisiais“ vadinamos tiriamųjų/objektų savybės. Duomenų analizės metodo pasirinkimas labai smarkiai priklausys nuo kintamojo prigimties. Pagal prigimtį statistiniai kintamieji skirstomi į 2 dideles grupes: kokybinius (kategorinius plačiąja prasme) ir kiekybinius. Šie, savo ruožtu, skaidomi į 4 pagrindinius tipus (pav. 2.5). Pav. 2.5: Pagrindiniai statistinių kintamųjų tipai. Kokybiniai (kategoriniai) kintamieji: nominalieji (angl. nominal variable) – tai tokie kintamieji, kurių reikšmių (vadinamos kategorijomis) išdėstymo tvarka nesvarbi, t. y., reikšmės natūralios eilės tvarkos neturi. Matavimo vienetų irgi neturi. Pvz., ląstelės spalva – violetinė, raudona, melsva, bespalvė, – ląstelės forma – apvali, kvadratinė, pailga, netaisyklinga. Kartais kategorijos užkoduojamos skaičiais, pvz., 0 – sveikas, 1 – serga, bet dėl to kintamasis netampa kiekybiniu. 0 ir 1 tai tik kategorijų kodai, kurių eilės tvarka nesvarbi. ranginiai (angl. ranked/ordered variable) – tai tokie kintamieji, kurių reikšmės (vadinamos kategorijomis) turi natūralią didėjimo ar mažėjimo tvarką, tačiau atstumas tarp gretimų reikšmių nėra pastovus ar tiksliai išmatuojamas. Įprastai matavimo vienetų neturi. Pvz., ląstelės dydžio kategorija – maža, vidutinė, didelė; savijauta – labai prasta, prasta, neutrali, gera, puiki. Ranginiams priklauso ir balais matuojami duomenys. Kiekybiniai kintamieji: kiekybiniai diskretieji (angl. discrete variable) – tai tokie skaitiniai kintamieji, kurie yra suskaičiuojami. Jie turi baigtinį (suskaičiuojamą) galimų reikšmių skaičių ir atstumas tarp dviejų galimų gretimų reikšmių yra pastovus ir gali būti tiksliai išmatuotas. Paprasčiau sakant, kiekybiniai diskretieji kintamieji išreiškiami teigiamais ir neigiamais sveikaisiais skaičiais bei nuliu. Įprastai aprašo kieno nors skaičių, pvz., ląstelių skaičių, dantų skaičių, kėdžių skaičių, į paskaitą atėjusių studentų skaičių, sėkmingų bandymų skaičių, raudonų mėgintuvėlių skaičių; tolydieji (angl. continuous variable) – tai skaitiniai kintamieji, kurie įprastai yra išmatuojami ar užregistruojami (bet ne suskaičiuojami). Gali įgyti ir trupmeniniais skaičiais užrašomas reikšmes (tarkim, 2,2354), teoriškai gali būti išmatuoti daugybės skaitmenų po kablelio tikslumu. Pasirinktame reikšmių intervale tarp dviejų skaičių (tarkim, tarp 2,2 ir 2,4) gali įgyti be galo daug reikšmių, nes skaičių po kablelio gali būti be galo daug. Įprastai turi konkrečius matavimo vienetus, nors gali būti išreikšti ir santykiniais vienetais ar būti bedimensiai dydžiai. Pvz., ląstelės svoris kilogramais, ilgis centimetrais, trukmė sekundėmis (kai skaičiuojamos ir sekundžių dalys), regėjimo aštrumas dioptrijomis, santykis tarp ilgio (metrais) ir pločio (metrais), šviesos intensyvumas santykiniais vienetais. Įprastai tokius skaičius suapvaliname iki tam tikro tikslumo tik dėl to, kad negalime išmatuoti be galo tiksliai arba praktiniam naudojimui užtenka ir mažesnio baigtinio tikslumo. Visgi teoriškai matuojamas kintamasis išlieka tolydusis. Kokius veiksmus galima atlikti su skirtingų tipų kintamųjų reikšmėmis? Nominaliąsias reikšmes galima tik suskaičiuoti: pasakyti, kiek kokių reikšmių yra. Ranginiais – galima suskaičiuoti, išdėstyti eilės tvarka ir palyginti, kuri didesnė/mažesnė. Su kiekybinių kintamųjų reikšmėmis – skaičiais – galima atlikti iš principo visus matematinius veiksmus (suskaičiuoti, palyginti, sudėti, atimti, padauginti, padalinti, apskaičiuoti vidurkį, …). Kokie kintamieji atrodo kaip skaitiniai (kiekybiniai), bet iš tiesų yra kategoriniai? Kategorijos, užkoduotos skaičiais, vis tiek yra kategorijos (tad joms skaičiuoti vidurkį nėra prasmės). Balais matuojami kintamieji iš tiesų yra ranginiai. Visgi, jei jie gali įgyti pakankamai daug reikšmių ir jų vidurkis turi prasmę (turbūt žinote, kas yra sesijos pažymių vidurkis), dažnai interpretuojami kaip skaitiniai. Visgi reikia prisiminti, kad pagal prigimtį – tai iš eilės išdėliotos kategorijos (rangai). Užduotis 2.1 Kuriam iš keturių tipų (nominalieji, ranginiai, diskretieji, tolydieji) priklauso šie duomenys: Šokolado svoris (g); Šokolado skonis (neskanus, skanus, labai skanus); Šokolado pakuotės spalva; Šokolado lydymosi temperatūra (°C); Šokolado plytelių skaičius; Šokolado porėtumas (porėtas/neporėtas); Šokolado rūšis (juodasis, baltasis, pieniškas, mėtinis); Šokolade esančių riešutų skaičius. 2.6 Duomenų saugojimo formos Atliekant tyrimą svarbus dalykas yra nuspręsti, kokia forma rinksime, organizuosime ir saugosime duomenis. Mūsų pasirinkimas priklauso nuo tyrimo srities, sprendžiamo uždavinio ir duomenų sudėtingumo. Šio kurso metu daugiausiai dirbsime su dviem formomis (duomenų struktūromis) – duomenų eilutėmis (duomenų sekomis) ir duomenų lentelėmis (duomenų sekomis, stulpeliais išdėliotomis į lentelės pavidalą) – tad siūlau skirti pakankamai daug laiko, kad tinkamai perprastumėte šias dvi struktūras. 2.7 Duomenų eilutės Duomenų eilutės – tai duomenų reikšmių seka. Joje įrašomos vienõs užregistruotos tiriamųjų savybės (tarkim, apklaustųjų ūgio) reikšmės. Duomenų eilutės pavyzdys – išmatuoti kurso kolegų ūgiai (centimetrais): 180, 168, 171, 173, 185, 179, 164. Duomenų eilutę taip pat galima pavadinti statistiniu kintamuoju, nes reikšmės nėra fiksuotos, bet kinta. (PASTABA: vėliau susipažinsime su kompiuteriniu terminu „kintamasis“, tad atskirkite, kad tai panašūs, bet skirtingi dalykai). Analizei svarbu atpažinti tokias duomenų eilutes: statistinė eilutė – duomenys surašyti eilės tvarka, pagal tai, kada buvo surinkti ir užregistruoti; variacinė eilutė – duomenys išrikiuoti didėjimo (arba nemažėjimo, jei yra vienodų reikšmių) tvarka. 2.8 Duomenų lentelės Duomenų lentelės – yra statistiniam tyrimui svarbiausia duomenų organizavimo forma. Ji yra standartizuota ir pritaikyta darbui statistinėmis programomis. Tvarkingos duomenų lentelės sudarymo principas: viena eilutė skirta vienam tiriamajam, vienas stulpelis – vienai savybei (kintamajam), o langeliuose – kiekvieno tiriamojo savybių reikšmės (žiūrėti pav. 2.6). Pav. 2.6: Duomenų lentelės struktūra. Atkreipkite dėmesį, kad stulpelių pavadinimai nurodo tiriamųjų savybes. Be to, įprastai lentelė turi pavadinimą, kuris turėtų būti prasmingas ir apibendrinti lentelėje surinktus duomenis. Duomenų lentelė gali būti gaunama vienos ar kelių duomenų eilučių reikšmes surašius kaip stulpelius. Tik svarbu, kad pirma kiekvienos duomenų eilutės reikšmė būtų iš pirmo tiriamojo, antra – iš antro ir t.t. T. y., kad eilės tvarka atitiktų teisingai. Visgi, vykdant tyrimą, duomenis rekomenduoju rinkti iš karto duomenų lentelės pavidalu, papildomai pasidarant duomenų lentelės aprašymą. Aprašymas reikalingas tam, kad jūsų kolegos, vadovas arba jūs pats/pati po 6 mėnesių tiksliai žinotumėte, kokie duomenys šioje lentelėje. Aprašyme bent trumpai apibūdinkite tyrimą, jo tikslą, nurodykite duomenų rinkimo metodus ir prietaisus, pateikite kintamųjų aprašymą, kuriame nurodyti matavimo vienetai. Rekomendacija: surinktus duomenis iš karto surašykite į duomenų lentelės pavidalą + būtinai pasidarykite duomenų lentelės kintamųjų aprašymą. Užduotis 2.2 Kas yra duomenų lentelė? Kas jos stulpeliuose ir kas - eilutėse? Išvardinkite 4 pagrindinius statistiniams skaičiavimams svarbius duomenų tipus ir nurodykite bent po 2-3 jiems būdingus požymius. Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["rstudio.html", "3. Programa RStudio 3.1 RStudio 3.2 RStudio langų išdėstymas 3.3 Komandų langas – konsolė 3.4 Redaktoriaus langas 3.5 Paketų valdymo langas 3.6 Pagalbos langas 3.7 RStudio projektai Klausimai ir komentarai", " 3. Programa RStudio Šis skyrius skirtas susipažinti su programa „RStudio“. Jame nagrinėsime organizacinius ir pagalbinius duomenų analizės bei darbo programa „R“ aspektus. Išsamesnei pažinčiai su programos „R“ kodu bus skirtos kitos temos. Tikslas – įgyti darbo programa „RStudio“ pradmenis. Jūsų užduotys skaitant šį skyrių: Sužinoti ir mokėti paaiškinti, kas yra „RStudio“ ir kuo skiriasi nuo „R“; Išmokti atsidaryti programą „RStudio“; Sužinoti ir mokėti apibūdinti pagrindinių „RStudio“ langų paskirtį; Išmokti kompiuteriui pateikti komandas naudojantis „R“ komandų langu; Išmokti kompiuteriui pateikti komandas naudojantis „R“ redaktoriaus langu; Sužinoti, kas yra „R“ paketas ir naudojantis „RStudio“ išmokti parsisiųsti ir užsikrauti paketą; Išmokti informaciją apie „R“ komandą susirasti pagalbos ir dokumentacijos („Help“) lange; Išmokti susikurti „RStudio“ projektą. 3.1 RStudio Programa „RStudio“ (pav 3.1) yra patogesniam darbui su „R“ skirta aplinka (integruota kūrimo aplinka, angl. IDE – integrated development environment). Jei imtume automobilį kaip atitikmenį, tai jo variklis būtų „R“, o mašinos salonas – vairas, pedalai, spidometras, šviesų jungiklis, masažinės sėdynės ir borto kompiuteris – „RStudio“ (pav. 3.2). Pav. 3.1: „RStudio“ logotipas. Iliustracijos šaltinis: . „R“ – variklis „RStudio“ – patogiam valdymui skirtas salonas Pav. 3.2: Analogija tarp „R“, „RStudio“ bei automobilio. Iliustracijos šaltinis: Papildoma. Galite peržiūrėti šiuos du video epizodus (anglų kalba), kuriuose pristatoma programa „RStudio“: „RStudio“ tinklalapyje ir „DataCamp“ tinklalspyje . Užduotis 3.1 Atsidarykite programą „RStudio“. Jei programos ikonos nėra darbalaukyje, pasinaudokite savo operacinės sistemos programų paieškos sistema. 3.2 RStudio langų išdėstymas Standartinis programos „RStudio“ langų išdėstymas ir kiti elementai, į kuriuos rekomenduojama atkreipti dėmesį, pavaizduoti pav. 3.3. Pirmą kartą atsidarę programą galite matyti tik tris langų grupes, o ne keturias, kaip vaizduojama iliustracijoje. Pav. 3.3: Keturios pagrindinės programos „RStudio“ langų grupės (1-4), langų išdėstymą valdantis meniu (5A, 5B), pagrindinė programos meniu juosta viršuje (6) bei dabartinio projekto pavadinimas (7). Paveiksle vaizduojamas langų išdėstymas šiosje svetainėje bus vadinamas standartiniu. 3.3 Komandų langas – konsolė Svarbiausias pirmosios langų grupės (pav. 3.3) langas yra komandų langas, dar vadinamas konsole (angl. console). Tai pagrindinis bendravimo su programa langas: čia rašome komandas ir gauname skaitinius arba žodinius atsakymus iš programos „R“. Jei konsolėje dega „&gt;“ ženkliukas (angliškai vadinamas prompt), vadinasi, konsolė pasirengusi priimti jūsų komandas. Norėdami, kad jos būtų įvykdytos, įrašome programos kodą ir paspaudžiame Enter. Jei komandos vykdymas trunka ilgai, užsidega „Stop“ ženkliukas . Kai jis užgęsta – skaičiavimas baigtas. Jei norime nutraukti skaičiavimą anksčiau laiko, paspaudžiame šį ženkliuką. Jei norime išvalyti konsolę, spaudžiame ikoną, kurioje vaizduojama šluota arba Ctrl+L. Jei konsolėje vietoje &gt; dega +, vadinasi, nebaigta vesti komanda. Šiuo atveju yra 2 išeitys: arba įvesti komandą iki galo, arba spausti „Escape“ (Esc) klavišą, kol vėl atsiras &gt; (pav. 3.4). Pav. 3.4: Vienas iš galimų sprendimų, jei konsolėje vietoje &gt; dega +, yra kelis kartus paspausti Esc. Iliustracijos šaltinis: . Užduotis 3.2 Perskaitykite, kas parašyta konsolėje, kai vos tik paleidžiate programą. Kokia tai informacija? Išvalykite konsolę. Naudodamiesi konsolės langu įvykdykite komandą „trys minus dvidešimt“: 3 - 20. Rezultatas turėtų būti „[1] -17“. 3.4 Redaktoriaus langas Antrai langų grupei (pav. 3.3) priklauso redaktoriaus langas (angl. source code editor). Šiame lange atidaromi įvairūs tekstiniai dokumentai, kurie naudojami kaip užrašų knygutė programos kodui bei tekstui. Pvz., „R“ programos kodui skirtas „R Script“, o ataskaitoms ar kitokiems dokumentams rengti – „R Markdown“ formatai. Dokumentus galime išsaugoti paspaudę Ctrl+S (rekomenduoju šią kombinaciją spausti reguliariai). Jei programą atsidarote pirmą kartą, redaktoriaus lango galite ir nematyti. Tokiu atveju paspauskite Ctrl+Shift+N ir atsidarys „R“ programos kodui rašyti (ir išsaugoti) skirtas langas („R Script“). Taip pat galite naudoti pav. 3.5 pateiktas instrukcijas. Pav. 3.5: Žingsniai, kaip „RStudio“ redaktoriaus lange atsidaryti programos kodui skirtą „R Script“ dokumentą. Numeriais pažymėti punktai rodo vietas, kur reikia spausti pele. Norėdami įvykdyti redaktoriaus lange parašytas komandas, programos kodą pažymime pele ir spaudžiame mygtuką („Run“) arba klavišų kombinaciją Ctrl+Enter. Užduotis 3.3 Patikrinkite, ar matote visus keturis „RStudio“ langus, vaizduojamus pav. 3.3. Jei kurio nors trūksta, atsidarykite. Įsitikinkite, kad programoje „RStudio“ nustatyta UTF-8 koduotė. Jei nepamenate kaip, žiūrėkite skyriuje 1.5.2. Redaktoriaus lange padėkite grotelių simbolį # ir raštu glaustai apibūdinkite, kas yra „R“ ir kas yra „RStudio“? Kuo skiriasi? Kuri iš programų – svarbesnė (kuri be kurios kita neveiktų)? Redaktoriaus lange naujoje eilutėje (be grotelių) įrašykite 2 + 3, šią išraišką pažymėkite pele ir paspauskite Ctrl+Enter. Kuriame lange atsirado atsakymas „[1] 5“? Tolimesnė šio skyriaus medžiaga vis dar rengiama! 3.5 Paketų valdymo langas Apie šį langą plačiau kalbama skyriuje „5 R paketai“ bei poskyryje „5.2 RStudio langas Packages“. 3.6 Pagalbos langas Vienas iš centrinių „R“ kodo elementų yra funkcija (žr. skyriuje 4.2.1). Norint rasti kurios nors funkcijos aprašymą ar naudojimo pavyzdžių galime pasinaudoti pagalbos langu „Help“. Šį langą galime atsidaryti tokiais būdais: naudodamiesi pele (pav. 3.6), redaktoriaus lange pažymėję funkcijos pavadinimą ir paspaudę F1, naudodami specializuotas funkcijas, tokias kaip help(), ?, ??. Kaip naudotis langu, paaiškinta pav. 3.6. Pav. 3.6: Naudojimasis pagalbos ir dokumentacijos langu. Ketvirtoje „RStudio“ langų grupėje (pav. 3.3) atsidarome kortelę „Help“ (1), įvedame dominančios funkcijos pavadinimą (2) ir iš iššokusio sąrašo pasirenkame patikslintą temą (3) arba tiesiog paspaudžiame Enter. Raidėmis pažymėtos dalys paaiškintos tekste. Dažnai naudingiausia dalis yra pavyzdžiai (G). Funkcijos dokumentacijos dalys, kurias įprastai turi aprašymas pagalbos lange (atitinka raidinius pav. 3.6 žymėjimus): Pačiame viršuje – funkcijos ir paketo, iš kurio ta funkcija paimta, pavadinimai tokiu formatu funkcija {paketas}; Aprašo pavadinimas (kuriame įprastai atsispindi funkcijos esmė); Skiltis Description – trumpas aprašas, ką funkcija atlieka; Skiltis Usage – „R“ kalbos sintaksė, kaip naudoti tą funkciją; Skiltis Arguments – funkcijos argumentų aprašymas; Skiltis Value – rezultato, kurį sukuria funkcija, aprašymas; Skiltis Examples – tai turbūt pati naudingiausia skiltis, kurioje yra programos kodo pavyzdžiai, rodantys kaip naudoti šią funkciją; Paketo pavadinimas ir versija. Priklausomai nuo aprašo, jo dalių skaičius gali būti kitoks. Paprastoji paieška programiškai. Konsolėje parašome komandą help(), o jos skliaustuose – dominančios funkcijos pavadinimą. „R“ ieško funkcijos aprašymų šiuo metu užkrautuose paketuose, todėl šis paieškos būdas labai spartus. Sakykime, norime apskaičiuoti medianą, bet nežinome, kaip naudojama funkcija median(). Rašome komandą: help(median) Kaip alternatyva gali būti naudojamas klaustuko operatorius: ?median Išplėstinė paieška programiškai. Jei paprastoji paieška aprašymo neranda, galite mėginti dviejų klaustukų operatorių, kurio pagalba aprašo ieškoma visoje „R“ dokumentacijoje: ??median Šio tipo paieška žymiai lėtesnė, tad procesas gali užtrukti. Plačiau apie „R“ pagalbos sistemą ir kaip ja naudotis rašoma straipsnyje „Getting Help with R“ bei forumo temoje „How to get help in R?“ . Užduotis 3.4 Nustatykite, ką atlieka ir kaip naudojamos (peržiūrėkite pavyzdžius) funkcijos sd(), max(), matrix() bei kokiame pakete jos yra. 3.7 RStudio projektai Geras bruožas – duomenų analizę atlikti tvarkingai. „RStudio“ turi specializuotų šiam tikslui skirtų įrankių. Vienas iš jų – „RStudio“ projektai, kurių ikona vaizduojama pav. 3.7. „RStudio“ projektas – tai aplankas jūsų kompiuteryje, skirtas kokiam nors duomenų analizės projektui. Šį aplanką programa pasižymi įkeldama bylą plėtiniu „.Rproj“ (pvz., „projektas.Rproj“), tad atidarius šią bylą atidaroma ir programa „RStudio“. Tame aplanke saugoma dalis programos nustatymų, skirtų projektui, taip pat gali būti saugomi duomenys, programos kodai ar kiti su projektu susiję dokumentai. Projektai labai pravartūs, jei tuo pačiu laikotarpiu dirbame su keliomis užduotimis, kurioms atlikti naudojame „R“, pvz., biostatistikos pratybomis, kursiniu darbu ir praktikos laboratorijoje užduotimis. Įprastai projekto aplankas laikomas aktyviuoju (darbiniu) aplanku (angl. working directory) – programa „R“ duomenų ir kitų bylų ieško būtent šiame aplanke. Pav. 3.7: „RStudio“ projekto ikona (autorių teisės gali būti saugomos). Visos programos vietos, paženklintos šiuo simboliu, yra susijusios su projektais. Projekto aplanke esanti „.Rproj“ byla taip pat paženklinta šiuo simboliu. „RStudio“ projektų valdymo meniu bei naujo projekto kūrimas vaizduojami pav. 3.8 ir 3.9. Pav. 3.8: Darbo su „RStudio“ projektais pagrindai. Pav. 3.9: Naujo „RStudio“ projekto kūrimo žingsniai. Punktus 1-4, 7 ir 8 pasirenkame pele, nurodome naujo projekto (5) ir aplanko, kuriame jis bus sukurtas (6) pavadinimus. 7 – jei varnelė uždėta, dabartinis projektas liks atidarytas. Bangelė aplanko pavadinime nurodom jog tai „Dokumentai“/„My documents“ (sistemoje „Windows“) arba pradžios (Home) aplankas (sistemose „Linux“, „Mac“). Būsimų pratybų metu jums bus duodami „RStudio“ projektai, suarchyvuoti (.zip) formatu. Prieš juos atsidarant, archyvų turinį būtina išskleisti („iš’zip’inti“) į atskirą aplanką, projektą atsidaryti ir atkreipti dėmesį į tai, koks atsidariusio projekto pavadinimas (pav. 3.10). Jei pavadinime yra archyvo plėtinys, pvz., „.zip“, vadinasi projektas atsidarytas ne taip, kaip reikia, ir kils problemų dirbant. Sprendimas: projektą uždaryti, „zip“ archyvo turinį išarchyvuoti („iš’zip’inti“) į atskirą aplanką ir projektą atidaryti iš šio naujojo aplanko. Pav. 3.10: „RStudio“ projekto pavadinimas. Užkrovus „RStudio“ projektą, matomas aplanko, kuriame yra projektas, pavadinimas (tarkime „Pratybos-2“). Jei projektas neužkrautas, matome užrašą „Project: (none)“. Jei projektą užkrauname iš bylos, kuri yra suarchyvuota (t. y., užkrauname netinkamai), projekto pavadinime yra archyvo bylos plėtinio (.zip, .rar ar pan.) pavadinimas. Tinkamai užkrauto projekto pavadinimas – tai projekto aplanko (o ne „.Rproj“ bylos) pavadinimas. Kartais (pvz., diegiantis paketus) projektą reikia uždaryti. Taip pat programa „RStudio“ suteikia galimybę greituoju būdu atsidaryti iki 10 naujausių projektų. Kaip tai padaryti vaizduojama pav. 3.11. Pav. 3.11: Projekto uždarymas ir neseniai uždaryto projekto atvėrimas. Pasirenkame ikoną, ties kuria – dabartinio projekto pavadinimas (1). Norėdami užverti projektą, renkamės „Close Project“ (2). Iki 10 vėliausiai naudotų projektų matome sąraše žemiau (pavyzdyje tik vienas projektas, pavadintas „Pratybos-2“). Vėliau norėdami atverti vieną iš šių 10 projektų, galime spustelti arba patį projekto pavadinimą (3) arba ikoną ties juo (4): (3) projektą atvers dabartiniame lange, o (4) – naujame (dabartinis irgi liks atidarytas). Norėdami peržiūrėti dabartinio projekto aplanko turinį arba šį aplanką atsidaryti iš programos „RStudio“, naudokitės pav. 3.12 pateiktomis instrukcijomis. Pav. 3.12: Aplanko peržiūra ir atidarymas. Programos „RStudio“ 4 langų grupėje (pav. 3.3) pasirinkite „Files“ kortelę (1). Joje matysite šiuo metu peržiūrimo aplanko pavadinimą (2). Namuko simbolis ir užrašas „Home“ (analogiškai kaip ir bangelė) sistemoje „Windows“ žymi jūsų dokumentų aplanką. Paspaudę kortelėje esančią projekto ikoną (3), pamatysite bylas ir aplankus, esančius jūsų projekto aplanke. Jei dirbate ne projekte, ikonos nebus. Toliau dirbant langas privalo būti pakankamai didelis, kad matytųsi visi mygtukai. Jei nesimato, langą reikia praplatinti: užveskite pelės žymeklį ties riba tarp dviejų langų, kol žymeklio ikona pasikeis (4) ir paspaudę pele ribą patempkite iki tol, kol langas taps reikiamo dydžio. Norėdami peržiūrimą aplanką atidaryti, spauskite mygtuką „More“ (5). Atsidariusiame meniu pasirinkite komandą „Show Folder in New Window“ (6). Aplankas atsidarys įprastu būdu, t. y., pagrindine jūsų kompiuterio sistemos aplankų peržiūrėjimo programa. Papildoma. Plačiau apie „RStudio“ projektus galite skaityti „RStudio“ pagalbos tinklalapyje . Užduotis 3.5 Susikurkite naują „RStudio“ projektą pavadinimu „Pratybos-1“ . Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["r-pradmenys.html", "4. Programos R pradmenys 4.1 Pirmieji R kodo elementai 4.2 R funkcijos 4.3 R objektai 4.4 Svarbiausi R duomenų tipai 4.5 R duomenų struktūros 4.6 Klausimai savikontrolei Klausimai ir komentarai", " 4. Programos R pradmenys „R“ yra programa, specializuota duomenų analizei. Šiame skyriuje susipažinsime su „R“ kaip su kompiuterine duomenų analizės kalba. Tikslas – įgyti darbo programa „R“ pradmenis: susipažinti su pagrindiniais „R“ kodo elementais, svarbiausiais „R“ duomenų tipais bei „R“ duomenų struktūromis. Jūsų užduotys skaitant šį skyrių: Išmokti suprasti ir naudoti „R“ sintaksės elementus, tokius kaip komentarai ir funkcijos (komandos). Sužinoti, kas yra funkcijos argumentas; Išmokti sukurti „R“ objektą (atlikti priskyrimo operaciją) ir sužinoti, kokie pavadinimai objektams yra leistini; Išmokti apibūdinti svarbiausius šiam kursui kompiuterinius „R“ duomenų tipus (skaičius, faktorius, tekstinius ir loginius kintamuosius) ir sužinoti, kokius statistinius duomenų tipus (kategorinius nominaliuosius, kategorinius ranginius, kiekybinius diskrečiuosius, kiekybinius tolydžiuosius ar nei vienas) jie atitinka. Išmokti programoje „R“ kurti duomenų sekas („R“ vektorius) ir atlikti paprastus veiksmus su šiomis sekomis („DataCamp“ užduotis). Pagrindinė ir svarbiausia praktinė jūsų šios dienos užduotis pateikta sistemoje „DataCamp“. Jos aprašymas: Užduotis 4.1 Norėdami praktiškai susipažinti su šiame skyriuje išdėstyta medžiaga, atlikite pamokos „Introduction to R“ 1, 2 ir 4 skyrius (įvadas, vektoriai ir faktoriai) sistemoje „DataCamp“ (1-2 val.). Prie sistemos prisijunkite naudodami savo VU studento el.pašto adresą. Kitaip nebus galimybės patikrinti, ar užduotį tikrai atlikote. 4.1 Pirmieji R kodo elementai Turbūt pamenate lietuvių kalbos pamokas apie „sintaksę ir skyrybą“. Jų metu mokėtės rašyti sakinius, taisyklingai sujungti įvairias jų dalis, tokias kaip aplinkybės, bei taisyklingai jas atskirti tinkamais skyrybos ženklais. Kompiuterijoje taip pat yra terminas „sintaksė“, kuriuo nusakoma kompiuterinės kalbos rašymo taisyklių visuma. Sintaksė (kompiuterijoje) yra kompiuterinės kalbos rašymo taisyklių visuma. Jūsų uždavinys analizuojant šį poskyrį – išmokti atpažinti kelis pagrindinius „R“ programos kodo sintaksės elementus bei susipažinti su šioje mokomojoje medžiagoje (svetainėje) naudojamu jų spalviniu žymėjimu. 4.1.1 R kodo komentarai (#) Vienas iš „R“ kalbos elementų yra komentaras. Grotelių ženklas (#) šalia „R“ komandų reiškia, kad tai komentaro pradžia. To, kas yra parašyta po grotelių, programa „R“ neskaito. Šitokiu būdu galime rašyti pastabas patys sau: # Tai komentaras, kurio R neskaito Komentaro ženklas galioja iki eilutės pabaigos, o rašant iš naujos eilutės – nebegalioja, tad norint tęsti komentarą kitoje eilutėje reikia groteles rašyti iš naujo: # Tai komentaras, # kuris tęsiasi per # kelias eilutes Tam, kad būtų paprasčiau susigaudyti, modernios programos įprastai skirtingomis spalvomis paryškina įvairius „R“ kodo elementus. Konkrečios spalvos ir paryškinimo būdas priklauso nuo naudojamos programos ir pasirinktų nustatymų. Šioje elektroninėje knygoje komentarai bus išryškinami tamsiai mėlyna spalva (kaip matote pavyzdyje virš šios pastraipos). Dirbdami programa „RStudio“, komentarus galite uždėti ir nuimti naudodami sparčiųjų klavišų kombinaciją Ctrl+Shift+C. Užduotis 4.2 Atsidarykite „RStudio“ redaktoriaus langą, jame – „R Script“ dokumentą. Jei dokumentas jau buvo atidarytas, naujo galite nekurti. Pirmoje eilutėje užrašykite „Author:“ ir savo vardą. Antroje – „Date:“ ir šios dienos datą. Abi eilutes pažymėkite pele. Naudodami greitųjų klavišų kombinaciją, eilutę užkomentuokite. Naudodami tą pačią kombinaciją atkomentuokite ir vėl užkomentuokite (t. y., įsitikinkite, kad ta pati kombinacija atlieka du veiksmus ir veikia tinkamai). 4.1.2 Rezultatų ženklinimas (##) Šioje svetainėje prieš rezultatus, kuriuos apskaičiuoja programa „R“, bus padedami du grotelių (t.y., komentaro) simboliai iš eilės (##) ir rezultatų tekstas bus nuspalvinamas pilkai: ## tai rezultatas, kurį pateikė R Pavyzdys: sudėjus 2 ir 3 (šią komandą parašome mes) atsakymas yra 5 (atsakymą apskaičiuoja ir parašo programa „R“): 2 + 3 ## [1] 5 Jei rezultatas bus apskaičiuojamas dirbant programa „R“, tai šių dviejų grotelių nepamatysite, nes dirbant programa ir taip aišku, kur jūsų parašyta komanda, o kur kompiuterio atsakymas. Užduotis 4.3 Programos „RStudio“ komandų lange (konsolėje) parašykite matematinį veiksmą 3 + 2. Kokį rezultatą gavote? Ką jis reiškia? Ar matote grotelių simbolį (##)? 4.1.3 Elementų eilės numerių žymėjimas: [ ] Praeitame pavyzdyje pastebėjote, kad eilutės pradžioje laužtiniuose skliaustuose atsirado papildomas skaičius [1]. Jis nurodo tos eilutės pirmojo elemento eilės numerį (pavyzdyje jo reikšmė buvo 5, o eilės numeris – 1). Aišku, šiuo atveju užrašas [1] duoda mažai naudos. Tačiau yra labai patogus, kai atsakymo elementų yra daug ir jie netelpa į vieną eilutę. Tokiu atveju laužtiniuose skliaustuose nurodomas kiekvienos eilutės pirmojo elemento eilės numeris, pvz.: ## [1] 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ## [18] 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 ## [35] 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 ## [52] 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 ## [69] 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 ## [86] 95 96 97 98 99 100 Pavyzdyje matome, kad elemento, kurio eilės numeris yra [69] reikšmė yra 78. Programoje „R“ elementų numeravimas (indeksavimas) prasideda nuo 1. T. y., indeksas „1“ reiškia, kad elemento eilės numeris yra pirmas. Kai kuriuose kituose programose indeksai prasideda nuo 0, o tai nėra taip patogu. Užduotis 4.4 „RStudio“ konsolėje parašykite komandą 595:200, kuri sukurs mažėjančių skaičių seką nuo 595 iki 200. Kokios elementų, kurių eilės numeriai 20 ir 380 reikšmės? 4.1.4 Kitų elementų spalvinis žymėjimas Skaičiai, simbolių eilutės, loginiai kintamieji bus išryškinami jiems būdingomis spalvomis: # Šioje eilutėje komentaras objekto_pavadinimas 335 # Skaičius TRUE # Loginė reikšmė &quot;simbolių eilutė (tekstas) rašoma kabutėse&quot; Užduotis 4.5 Aukščiau esantį programos kodo pavyzdį nukopijuokite į „RStudio“ redaktoriaus langą („R script“ dokumentą). Kokiomis spalvomis nusidažė skirtingi „R“ sintaksės elementai? 4.1.5 Programos kodas: blokais ir tekste Didesni kodo pavyzdžiai bus pateikiami blokais su spalvomis išryškintais elementais, kaip matėte ankstesniuose pavyzdžiuose: # Sudedame 5 bei 4 ir ištraukiame šaknį. # Atsakymas bus 3: sqrt(5 + 4) ## [1] 3 Kodo pavyzdžiai gali būti pateikiami ir toje pačioje eilutėje su tekstu, pvz., sqrt(5 + 4). (Komanda sqrt() reiškia kvadratinė šaknis, angl. square root). Žinokite, kad tai programos kodas. 4.2 R funkcijos Viskas, kas vyksta programoje „R“ – sudėtis, lango atidarymas, paveikslo nubraižymas, duomenų išsaugojimas, spalvos pakeitimas – yra kokios nors komandos vykdymo rezultatas. Komandas galima suskirstyti į įprastines funkcijas ir operatorius. 4.2.1 Įprastinės funkcijos ir jų argumentai Funkcija – tai veiksmas ar komanda, kurią nurodome atlikti kompiuteriui. Jos rašomas kaip vienas žodis be tarpelių (susidedantis iš raidžių, skaičių, taškų ir/arba apatinių brūkšnių), kurio gale yra paprastieji apvalūs skliausteliai (). Atkreipkite dėmesį į tai, kad tarp komandos pavadinimo ir skliausto tarpų nepaliekame. Šioje svetainėje funkcijos bus paryškintos žydrai, pavyzdžiui: r_funkcija() Pastaba: jūsų kompiuteryje užrašas r_funkcija() neveiks, nes tai tik pavyzdys. Komandos skliausteliuose rašome taip vadinamus funkcijos argumentus (terminai „funkcijos“, „argumentai“ – visai tokie, kaip per matematikos paskaitą): r_funkcija(argumento_reikšmė) Argumentai gali turėti pavadinimus ir šie bus pabraukti (kol kas nesijaudinkite, jei neaišku, kas tie argumentai ir t.t. Dabar svarbiausia, kad suprastumėte tik jų spalvinį žymėjimą): r_funkcija(argumento_pavadinimas = argumento_reikšmė) Jei argumentas turi pavadinimą, jo reikšmė nurodoma naudojant = (bet ne operatorių &lt;-, apie kurį rašoma skyriuje „Objektų kūrimas“). Pavadinimą turinčio funkcijos argumento reikšmė nurodoma naudojant operatorių = (bet ne &lt;-). Pavyzdys, funkcija log(), kuri įprastai apskaičiuoja natūrinį logaritmą. Apskaičiuokime \\(ln(100)\\): log(100) ## [1] 4.60517 Funkcija log() turi argumentą x, tad galime užrašyti kitaip ir gauti tą patį rezultatą: log(x = 100) ## [1] 4.60517 Užduotis 4.6 Programos „RStudio“ konsolėje parašykite žodį „log(“ (programa automatiškai padės uždarantį skliaustelį). Tada paspauskite klavišą Tab. Programa parašys, kokie galimi funkcijos log() argumentų pavadinimai (juos galėsite pasirinkti pele). Įvardinkite šiuos argumentus. Analogiškai išsiaiškinkite, kokie galimi funkcijos data.frame() argumentų pavadinimai. Kol kas jų reikšmės suprasti nereikia. Atlikdami pratimą išsiaiškinome, kad iš tiesų funkcija log() turi kelis argumentus, ir kai argumentų daug, jų parašymas funkcijos viduje suteikia aiškumo: log(100, base = 10) ## [1] 2 Turbūt supratote, kad buvo pakeistas logaritmo pagrindas („base“) į 10 ir apskaičiuota išraiška \\(log_{10}(100)\\). Tuo tarpu užrašas be argumentų pavadinimų nėra toks aiškus: log(100, 10) ## [1] 2 Jei norite daugiau sužinoti apie funkciją log(), komandų lange įrašykite ?log (prieš funkcijos pavadinimą padėkite klaustuką) ir pagalbos bei dokumentacijos lange „Help“ (pav. 3.3 langas Nr. 4) pamatysite aprašymą. Jei naudojame kelis funkcijos argumentus, juos atskiriame kableliais (,), o po kablelio padedame tarpelį: r_funkcija(reikšmė_1, reikšmė_1, reikšmė_3) Arba: r_funkcija(arg_1 = reikšmė_1, arg_2 = reikšmė_1, arg_3 = reikšmė_3) Pavyzdys – funkcija c(), kuri skirta kurti duomenų sekas (vektorius): c(1, 16, 99, -3, 58) ## [1] 1 16 99 -3 58 Funkcija c() bus viena iš dažniausiai naudojamų, todėl ją įsiminkite labai gerai. Užduotis 4.7 Apskaičiuokite dvejetainį logaritmą skaičiui 65. Koks atsakymas? Sukurkite seką („R“ vektorių) iš skaičių: 1; 10; 100; 1000; 10000. 4.2.2 Operatoriai „R“ operatoriai – tai pavieniai simboliai ar kelių simbolių sekos, atliekančios tam tikrus veiksmus (t. y., operacijas). Iš principo, operatorius – tai „R“ funkcija, tik užrašoma ne žodžiais, o simboliais. Pavyzdžiui, sudėties operatorius +: -25 + 43 ## [1] 18 Operatoriai būna: Aritmetiniai: atlieka matematines operacijas, pvz., +, -; Palyginimo: lygina reikšmes, pvz., &lt;; Loginiai: (&amp; – IR, | – ARBA, ! – NE) – įprastai naudojami tikrinant sąlygas, pvz., ar geras IR turtingas; Priskyrimo: pvz., &lt;-, -&gt; ar = – skirti kurti „R“ objektus; Skaičių sekų kūrimo, pvz., :; Kitokie, pvz., funkcijų jungimo į grandinę operatorius %&gt;%. Užduotis 4.8 „RStudio“ pagalbos lango („Help“) paieškos laukelyje parašykite nurodytus operatorius ir suraskite reikiamą informaciją apie juos: &lt;- – kaip vadinasi tema? | – kaip vadinasi tema? + – kaip vadinasi tema ir ar dokumentacijoje pateikta pavyzdžių? : – kam skirtas šis operatorius ir kaip juo naudotis? 4.3 R objektai Viskas, kas „R“ atmintyje yra išsaugota tam tikru pavadinimu, vadinama objektais. Išsaugoti galime skaičius, duomenų sekas, duomenų lenteles ir netgi funkcijas (pav., 4.1). „R“ objektai dar vadinami kintamaisiais kompiuterijos prasme (angl. variable), nes pavadinimu žymimą reikšmę galime pakeisti. Pav. 4.1: Programos „R“ objektų tipų pavyzdžiai. Pastabos. Atkreipkite dėmesį į tai, kad vienodai skambantys terminai (pvz., „objektas“, „kintamasis“) statistikos ir kompiuterijos prasme gali turėti susijusias, bet skirtingas reikšmes. Tikiuosi, kad greit susigaudysite ir tai nekels problemų. 4.3.1 Objektų kūrimas Veiksmas, kurio metu kintamajam priskiriama reikšmė (t. y., kurio metu sukuriamas objektas), vadinamas priskyrimu (angl., assignmemt). „R“ objektai sukuriami naudojant taip vadinamą priskyrimo operatorių: arba &lt;- (įprastinis „R“ naudotojo pasirinkimas), arba =. Rodyklė &lt;- susideda iš simbolių „mažiau“ ir „minus“, parašytų be tarpo. Programoje „RStudio“ įterpiama naudojant kombinaciją Alt+-. Kartais paspaudus šią kombinaciją įterpiamas operatorius =. Tokiu atveju programa mano, kad esamoje situacijoje šis operatorius yra tinkamesnis. Būtinai atkreipkite dėmesį į tai, kad iš kiekvienos operatoriaus pusės yra palikta po tarpelį. Tai suteikia aiškumo. Sukurkime objektą objekto_pavadinimas kurio reikšmė būtų skaičius keturi: # Skaitinės reikšmės priskyrimas objekto_pavadinimas = 4 # Skaitinės reikšmės priskyrimas objekto_pavadinimas &lt;- 4 Sakoma, kad objektui objekto_pavadinimas priskiriama reikšmė 4. Jei parašome sukurto kintamojo pavadinimą, įprastai atspausdinama jo reikšmė (tai vadinama spausdinimu pagal nutylėjimą): objekto_pavadinimas ## [1] 4 Taip pat tą patį rezultatą galime pasiekti naudodami komandą print() (šiuo atveju tai išreikštasis spausdinimas, nes parašome komandą): print(objekto_pavadinimas) ## [1] 4 Vėliau sukurtą objektą galima panaudoti atliekant tolimesnius veiksmus. Panagrinėkime pavyzdį. Sukurkime objektą ir priskirkime jam reikšmę: nupirkom_kiausiniu &lt;- 10 Atspausdinkime sukurtą objektą (reikšmės spausdinimas pagal nutylėjimą): nupirkom_kiausiniu ## [1] 10 Sukurkime dar vieną objektą: suvalgem_kiausiniu &lt;- 6 Atspausdinkime ir jį: suvalgem_kiausiniu ## [1] 6 Su šiais dviem objektais galime atlikti matematinius veiksmus tarsi tai būtų skaičiai, kuriuos priskyrėme: liko_kiausiniu &lt;- nupirkom_kiausiniu - suvalgem_kiausiniu Atspausdinkime rezultatą: liko_kiausiniu ## [1] 4 Reikšmes taip pat galima priskirti naudojant ir = simbolį: po_papildymo = liko_kiausiniu + 3 po_papildymo ## [1] 7 Užduotis 4.9 Naudodami operatorių &lt;- sukurkite objektus pavadinimais „a“, „b“ ir „c“ kurių reikšmės būtų atitinkamai 96, -6, 0.01. Visus šiuos objektus sudėkite. Ar rezultatas toks, kokio tikėjotės? 4.3.2 Darbinė erdvė Galime apsibrėžti, kad darbinė erdvė, arba darbinė aplinka (angl., workspace, arba working environment), – tai visi darbinėje „R“ atmintyje esantys (sukurti ar įkelti) objektai. Jų pavadinimai yra išvardinti lange „Environment“ (pav. 3.3 langas Nr. 3). „Išvalyti darbinę erdvę“ – reiškia ištrinti visus „R“ atmintyje esančius objektus. „Išsaugoti/užkrauti darbinę erdvę“ – šiuos objektus išsaugoti į kietąjį diską ar vėl įkelti į „R“. Užduotis 4.10 Į konsolę nukopijuokite programos kodą x &lt;- 2 ir paspauskite klavišą Enter. Lange „Environment“ atsiras objektas, pavadinimu „x“. Ar matote jį? Jei norime, kad „R“’as konsolėje išvardintų objektų, šiuo metu esančių jo atmintyje, pavadinimus, galime naudoti komandą objects(): objects() # R&#39;as išvardija, kas jo darbinėje atmintyje Dažnai naudojamas komandos objects() sinonimas yra komanda ls(), kuri daro visiškai tą patį: ls() # R&#39;as išvardija, kas jo atmintyje Norėdami pašalinti objektą, naudojame funkciją remove() arba rm(), kurios skliaustuose įrašome objekto pavadinimą, pvz.: remove(suvalgem_kiausiniu) Kaip analizuojant „R“ kodą pagal skliaustelius atpažinti, kur yra įprastinė funkcija, o kur kitoks objektas? Pradiniam susigaudymui galima sakyti, kad po funkcijos rašomi paprastieji apvalieji skliausteliai ( ), pvz., sum(). Jei parašyti laužtiniai skliausteliai [ ] arba [[ ]], vadinasi, tai kitoks objektas (ne funkcija). 4.3.3 Objektų pavadinimai Leistini simboliai pavadinimuose Programoje „R“ objektų pavadinimuose pirmasis simbolis privalo būti raidė. Pirmas gali būti ir taškas, bet tada objektas tampa paslėptas, o tai jau pažengusiųjų lygio tema, tad tokie pavadinimai nerekomenduojami. Antras ir tolimesni simboliai gali būti didžiosios ir mažosios raidės, skaičiai, taškas (.) ir apatinis brūkšnys (_). Ar didžiosios ir mažosios raidės – svarbu? Programa „R“ skirtingai reaguoja į didžiąsias ir mažąsias raides. Tad pavadinimai T ir t arba c ir C, arba mano_mama, mano_Mama ir mano_MAMA yra suprantami kaip skirtingi žodžiai. Skirtingas programų reagavimas į didžiąsias ir mažąsias raides angliškai vadinamas terminu „case sensitive“. Pavadinimų rašymo stilius (rekomendacijos) Ar pamenat filmuką „Kung-fu Panda“? Jame kung-fu meistrai naudojo skirtingus kovos stilius: tigro, gervės, gyvatės… Panašiai ir rašant kintamųjų pavadinimus, kuriuose norima pavartoti kelis žodžius, naudojami įvairūs stiliai: DvikuprioKupranugarioStilius – žodžiai rašomi iš didžiosios raidės, be tarpų (angl. big/upper camel case); vienkuprioKupranugarioStilius – visi žodžiai, išskyrus pirmąjį, rašomi iš didžiosios raidės, be tarpų (angl. small/lower camel case); taškuotojo.leopardo.stilius – žodžiai atskiriami taškais; gyvatės_stilius – visos mažosios raidės, o žodžiai atskiriami apatiniais brūkšniais (angl. snake case). Šio kurso metu daug dėmesio skirsime darbui „Tidyverse“ sistema. Todėl objektų pavadinimus rašysime pagal „Tidyverse“ stiliaus gido rekomendacijas – naudosime gyvatės_stilių, kur: pavadinime naudojamos tik mažosios raidės, skaičiai ir apatinis brūkšnys _; pirmasis simbolis pavadinime – visada raidė (mažoji). Taip pat stenkitės kurti prasmingus pavadinimus, pvz., ugis, svoris, amzius (vietoje x, y ar z), kurie padėtų lengviau suprasti jūsų kodo esmę ir kitam žmogui (tarkim, jums po 6 mėnesių) būtų paprasčiau jį suprasti. Pastebėsite, kad kitų autorių kode objektų pavadinimuose taškas (.) yra vartojamas gana dažnai. Deja, tam tikrame kontekste jis įgyja specialiąją reikšmę. Todėl taško „R“ objektų pavadinimuose venkite. Kaip kurti „R“ objektų pavadinimus, kad vėliau nekiltų problemų? Naudotis „Tidyverse“ stiliaus rekomendacijomis: pirmasis simbolis pavadinime privalo būti mažoji raidė; kiti simboliai – tik mažosios raidės, skaičiai ir apatiniai brūkšniai _; pavadinimai turėtų būti prasmingi, bet trumpi. Taško „R“ objektų pavadinimuose venkite. Papildoma. Visą „Tidyverse“ stiliaus gidą galite rasti adresu style.tidyverse.org . Užduotis 4.11 Kurie iš šių „R“ objektų pavadinimų (1) yra leistini programoje „R“ apskritai ir kurie (2) rekomenduojamų vartoti simbolių prasme yra tinkami pagal „Tidyverse“ stiliaus gidą? pirmoobjektopavadinimas &lt;- 1 PIRMOOBJEKTOPAVADINIMAS &lt;- 1 1objektopavadinimas &lt;- 1 pirmo.objekto.pavadinimas &lt;- 1 Objekto.pavadinimas.1 &lt;- 1 obj.....nr..........1 &lt;- 1 pirmo!objekto!pavadinimas &lt;- 1 o001452475584 &lt;- 1 pirmo_objekto_pavadinimas &lt;- 1 pirmo_objekto$pavadinimas &lt;- 1 pirmoObjektoPavadinimas &lt;- 1 0pavadinimas0 &lt;- 1 PIRMO_OBJEKTO_PAVADINIMAS &lt;- 1 _objektas &lt;- 1 obj_1 &lt;- 1 4.4 Svarbiausi R duomenų tipai Programa „R“ yra skirta darbui su duomenimis. Pagal prigimtį duomenys būna skirtingų tipų (pvz., skaičiai ar kategorijos). Vieną klasifikaciją, kuri svarbi statistinei analizei, peržvelgėme teorinių paskaitų metu. Dėl praktinių (pvz., ar patogu dirbti) bei techninių (pvz., kiek vietos užima kompiuterio atmintyje) sumetimų kiekviena kompiuterinė duomenų analizės sistema savaip apibrėžia duomenų tipus. Reiktų žinoti, kad yra „teoriniai statistiniai“ ir „kompiuteriniai“ duomenų tipai. Visi „R“ objektai turi savybę pavadinimu klasė (angl. class), kas reiškia, kad su skirtingos klasės objektais tos pačios funkcijos gali elgtis skirtingai (pvz., funkcija plot() braižo skirtingo tipo grafikus, funkcija summary() atlieka skirtingo tipo skaitines suvestines). Objekto klasę galime patikrinti naudodami funkciją class(). Per objektų klasių prizmę ir aptarsime svarbiausius programos „R“ duomenų tipus 4.1. Lentelė 4.1: Pagrindiniai „R“ duomenų tipai. Kompiuterinio duomenų tipo pavadinimas „R“ klasė Alternatyvus pavadinimas Atitinkamas statistinių duomenų tipas Reikšmių užrašymo pavyzdys Sveikieji skaičiai¹ integer Kiekybiniai 1L, -65L, 0L Realieji skaičiai¹ numeric double Kiekybiniai 42, -0.6, 1.2e2, .3 Loginės reikšmės¹ logical boolean Atitikmens neturi TRUE, FALSE Ženklų eilutės¹(tekstas) character strings Atitikmens neturi &quot;labas&quot;, &#39;A4&#39; Faktorius² factor Kategoriniai ¹ – Pagrindinis (atominis) duomenų tipas. ² – Sudėtinis duomenų tipas (bus aptarta vėliau). Aptarkime kiekvieną iš šių klasių plačiau. 4.4.1 Skaitiniai kintamieji Prieš aptardami technines detales apie svarbiausius skaitinius „R“ duomenų tipus įsidėmėkite tai, kad: Klasė „integer“ tinka ir tolydiesiems, ir diskretiesiems (jei jie suapvalinti iki sveikųjų dalių) kiekybiniams duomenims reprezentuoti. Klasė „numeric“ taip pat tinka ir tolydiesiems, ir diskretiesiems kiekybiniams duomenims. Abi skaitinių kompiuterinių duomenų klasės („numeric“ ir „integer“) yra tinkamos statistiniams kiekybiniams kintamiesiems reprezentuoti. Klasė „numeric“ Klasė „numeric“ – tai realieji skaičiai, t. y., skaičiai su kableliu. Šios klasės objektai kompiuterijoje dar vadinami „double“ (nuo „double-precision floating-point format“). Visiems skaičiams (ne tik „numeric“ klasės) programoje naudojamas tam tikras spalvinis žymėjimas. Be papildomų nurodymų programoje „R“ parašytas skaičius suprantamas kaip klasės „numeric“ atstovas, pvz., 0, 42 ar -3.2. Konsolėje parašykite class(42) ir įsitikinsite. Programoje „R“ sveikoji ir dešimtoji dalys skaičių rašomos atskiriant tašku, pvz., 10.66, o ne kableliu 10,66 (atkreipkite dėmesį į tai, kad kablelis paryškintas kita, skaičiams nebūdinga spalva). Taip yra todėl, kad tai, kas lietuviškai vadinama „kableliu“, angliškai užrašoma kaip taškas (žiūrėti pavyzdžius). Jei sveikoji skaičiaus dalis yra 0, tai jos galime nerašyti, pvz., .01 yra tas pats, kas 0.01, o -.2 atitinka -0.2. Šitoks užrašymas gali būti naudojamas ne tik programoje „R“, bet ir mokslinėje literatūroje. Realieji skaičiai gali būti užrašomi ir inžineriniu-moksliniu formatu naudojant simbolius \\(e\\) arba \\(E\\) (abiem atvejais ta pati reikšmė), kur 1e4 reiškia \\(1\\cdot10^4\\), o 2.3e-2 reiškia \\(2.3\\cdot10^{-2}\\). Pvz., 1e2, -1.2E-2. Kad ir kokiu būdu būtų užrašyti, programoje „RStudio“ skaičiai yra išryškinami ta pačia skaičiams būdinga spalva (ji priklauso nuo pasirinktos spalvų schemos): -1.2E-2, 2, .06. (Šioje svetainėje žaliai išryškinami tik sveikieji skaičiai, pvz., lentelėje 4.1). „R“ duomenų statistiniuose aprašymuose trumpinama num arba dbl. Tinka reprezentuoti bet kokiems kiekybiniams statistinių duomenų tipams. Svarbu! Į programą „R“ įvestų skaičių sveikoji ir dešimtoji dalis visada atskiriama tik tašku, bet ne kableliu. Skaičių sekos užrašymo pavyzdys ir jos atvaizdavimo grafiškai pavyzdys: seka_num &lt;- c(125.4, 122.3, 100, 111.2, 101, 121, 122, 119.3) plot(seka_num) Užduotis 4.12 „RStudio“ konsolėje įvykdykite po vieną komandą ir stebėkite, koks atsakymas (gali būti ir klaida): 1 class(1) 1e2 1E3 1e-3 1E-2 1.691e2 class(1.691e2) str(1e2) # str() - objekto struktūra Ar suprantate kiekvieną šio kodo eilutę? Klasė „integer“ Klasei „integer“ priklauso teigiami ir neigiami sveikieji skaičiai bei nulis: Sveikasis skaičius kompiuterio atmintyje užima mažiau vietos nei realusis ar kompleksinis. Mūsų kurso metu naudojamiems duomenims šis skirtumas nebus praktiškai reikšmingas. Norint, kad skaičius būtų saugomas kaip sveikasis, jo pabaigoje parašome L didžiąją raidę, pvz., 4L. Sveikasis skaičius įprastai gali būti ne mažesnis nei -2147483647 ir ne didesnis nei 2147483647. Tačiau to mums prisiminti nereikia, nes jei parašytume netinkamo dydžio skaičių, „R“ mums apie tai praneš įspėjimo žinute. „R“ duomenų statistiniuose aprašymuose trumpinama int. Įprastai naudojamas kiekybiniams diskretiesiems statistiniams kintamiesiems reprezentuoti, bet tinka ir iki sveikosios dalies suapvalintiems tolydiesiems. Užduotis 4.13 „RStudio“ redaktoriaus lange parašykite 100, L, 100L. Kokiomis spalvomis paryškino užrašą 100L? Konsolėje įvykdykite kodą 100L. Koks atsakymas? Konsolėje įvykdykite kodą class(100L). Koks atsakymas? Įvykdykite kodą: str(100L) # str() - objekto struktūra 4.4.2 Loginės reikšmės Programoje „R“ yra dvi loginės reikšmės TRUE (taip, tiesa) ir FALSE (ne, netiesa), kurios priklauso klasei „logical“: Atsiranda atliekant palyginimą arba sąlygos tikrinimą, pvz., 1 &lt; -1 (lyginame 1 ir -1) arba is.numeric(24) (tikriname, ar 24 priklauso klasei „numeric&quot;). Loginės reikšmės gali būti užrašomos ir sutrumpintai (T arba F), bet visą laiką tik didžiosiomis raidėmis. Atliekant matematinius veiksmus, loginės reikšmės automatiškai paverčiamos į skaičius: TRUE į 1, FALSE į 0. Tad veiksmo TRUE + TRUE + FALSE atsakymas bus 2. Jei pradiniai statistiniai duomenys užrašyti loginėmis reikšmėmis, prieš atliekant statistinę analizę, loginius kintamuosius įprastai reikia pasiversti į kategorinius naudojant funkciją factor() arba as.factor(). Statistiniuose „R“ duomenų aprašymuose trumpinama: lgl, lgcl arba logi. Užduotis 4.14 Kam lygios šios išraiškos? Nurodykite konkretų atsakymą, arba kad „R“ neapskaičiuos (bus klaida). Nenaudokite programos „R“, apskaičiuokite mintinai: sum(TRUE, TRUE, TRUE, FALSE, TRUE) x &lt;- c(&quot;vyras&quot;, &quot;moteris&quot;, &quot;vyras&quot;, &quot;moteris&quot;, &quot;moteris&quot;) sum(x == &quot;moteris&quot;) # == atlieka palyginimą, o = priskyrimą Įvykdykite kodą: str(TRUE) # str() - objekto struktūra 4.4.3 Tekstiniai kintamieji Ženklų ir simbolių eilutės (Tekstas) – priklauso klasei „character“, angliškai dar vadinamos terminu „strings“: Mūsų kurso metu tai bus pagalbinis duomenų tipas, kurio reikia norint užrašyti, pvz., grafikų pavadinimus. Tekstinės reikšmės sukuriamos tekstą ar simbolius parašius dvigubuose (&quot;...&quot;) ar viengubose (&#39;...&#39;) „kompiuteristų“ kabutėse (atkreipkite dėmesį, kad tos kabutės yra tiesios ir jose esantis tekstas įprastai paryškinamas tam tikra spalva, šioje svetainėje ji yra žalia), o ne pagražintose „literatūrinėse“ kabutėse, pvz., „...“ arba ‘...’ (šio tipo kabutėse esantis tekstas nėra paryškintas klasei „character“ būdinga spalva, jis pilkas). Ženklų eilučių pavyzdžiai: &quot;labas&quot;,&#39;A4&#39;. „R“ duomenų eilutės palaiko specialiuosius simbolius, kurie prasideda ženklu \\, vadinamu „išeities simboliu“ (angl., escape character). Pvz., \\n – nurodo, kad spausdinant tekstą šioje vietoje bus nauja eilutė, \\t – tabuliacija (tam tikros rūšies tarpas), \\&quot; ir \\' – nurodo, kad šioje vietoje bus kabutės (kabutėse), o ne ženklų eilutės pabaiga. Norėdami atspausdinti paprastą atgal pasvirusį brūkšnį, jį turime rašyti 2 kartus (\\\\). Vienose situacijose tai yra labai patogu, kitose – labai neįprasta ir apsunkina eilutės suprantamumą. Jei pradiniai duomenys yra tekstiniai, juos įprastai pasiversime į kategorinius duomenis naudodami funkciją factor() arba as.factor(). Kompiuterio atmintyje faktoriai užima mažiau vietos nei tekstas. „R“ duomenų statistiniuose aprašymuose trumpinama chr arba char. Prieš atliekant statistinę analizę, tekstinių kintamųjų reikšmės verčiamos į kategorinių kintamųjų reikšmes. Užduotis 4.15 Komanda writeLines() žmogui suprantama išraiška atspausdina ženklų eilutes. „RStudio“ konsolėje įvykdykite kiekvieną komandą ir stebėkite, koks atsakymas (gali būti ir klaida): writeLines(&quot;1 Abc&quot;) writeLines(„2 Abc“) # :( writeLines(&#39;3 Abc&#39;) writeLines(‘4 ABC’) # :( writeLines(&quot;5 A &#39;BC&#39;&quot;) writeLines(&#39;6 A &quot;BC&quot;&#39;) writeLines(&quot;7 A \\&quot;BC\\&quot;&quot;) # \\&quot; kabutės kabutėse writeLines(&quot;8 A\\tB\\tC&quot;) # \\t tabuliacija writeLines(&quot;9 A\\nB\\nC&quot;) # \\n nauja eilutė writeLines(&quot;A\\\\B\\\\C&quot;) # \\\\ tiesiog atgal pasviręs brūkšnys str(&quot;ABC&quot;) # str() — objekto struktūra Ar galite paaiškinti, kodėl gautas būtent toks rezultatas? 4.4.4 Faktoriai – kategoriniai kintamieji Nominalieji duomenys Faktorius (klasė „factor“) – tai „R“ duomenų tipas, turintis iš anksto apibrėžtą galimų skirtingų reikšmių (kategorijų) skaičių. Faktoriai skirti saugoti kategorinių kintamųjų reikšmes. Faktoriai turi iš anksto apibrėžtą galimų reikšmių (kategorijų) skaičių. Programoje „R“ kategorijos vadinamos „lygiais“ (angl. levels). Faktoriaus reikšmės kompiuterio atmintyje saugomos kaip sveikieji skaičiai (t. y., kategorijos kodai), o kategorijų pavadinimai – kaip tekstas. Tokiu būdu kategoriniai duomenys kompiuterio atmintyje užima mažiau vietos nei tekstas. Statistiniuose aprašymuose klasė „factor“ trumpinama fct, fctr arba tiesiog Factor. Faktorius gali būti sukurtas naudojant funkciją factor(), o argumentas levels skirtas nurodyti pageidaujamą kategorijų eilės tvarką: mano_kategorijos &lt;- factor(c(&quot;A&quot;, &quot;C&quot;, &quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;A&quot;), levels = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;)) mano_kategorijos # Atspausdiname rezultatą ## [1] A C C B A A ## Levels: A B C Tie patys duomenys, tik kita kategorijų eilės tvarka: mano_kategorijos_2 &lt;- factor(mano_kategorijos, levels = c(&quot;B&quot;, &quot;A&quot;, &quot;C&quot;)) mano_kategorijos_2 # Atspausdiname rezultatą ## [1] A C C B A A ## Levels: B A C Duomenys priklauso klasei „factor“: class(mano_kategorijos) ## [1] &quot;factor&quot; Skirtumas pasimato sudarant lenteles ir braižant grafikus: # Stulpelinė diagrama plot(mano_kategorijos) # Stulpelinė diagrama # (tiems patiems duomenims pakeista kategorijų eilės tvarka) plot(mano_kategorijos_2) (Prisiminkite, kokio tipo grafiką funkcija plot() nubraižė skaitiniams kintamiesiems. T. y., ar tokio paties?) Bandant palyginti kelias faktoriaus reikšmes, „R“ pasakys, kad tokį veiksmą atlikti neprasminga (not meaningful for factors), nes kategoriniai kintamieji neturi natūralaus kategorijų eiliškumo: # [1] pirmas elementas, t. y. raidė „A“ # [2] antrasis elementas, t. y. raidė „C“ mano_kategorijos[1] &lt; mano_kategorijos[2] ## Warning in Ops.factor(mano_kategorijos[1], mano_kategorijos[2]): &#39;&lt;&#39; not ## meaningful for factors ## [1] NA Simbolis NA reiškia, kad atsakymas yra negalimas (angl., not available). Ranginiai duomenys Ranginiams duomenims įprastai naudojama klasė „ordered“. Ji sukuriama naudojant tą pačią funkciją factor() ir nurodant argumentą ordered = TRUE: ranginis &lt;- factor(mano_kategorijos, ordered = TRUE) ranginis ## [1] A C C B A A ## Levels: A &lt; B &lt; C Iš principo, tai tie patys faktoriai, tik papildomai kategorijos turi eilės tvarką, todėl galima palyginti, kuri reikšmė yra didesnė. class(ranginis) ## [1] &quot;ordered&quot; &quot;factor&quot; Ranginio kintamojo reikšmes galima palyginti, nes rangai turi eilės tvarką: ranginis[1] &gt; ranginis[2] ## [1] FALSE Statistiniuose aprašymuose klasė „ordered“ trumpinama kaip ord arba Ord.factor. Užduotis 4.16 Atkartokite šiame skyriuje pateiktus pavyzdžius su faktoriais, tik kategorijų eilės tvarką išdėliokite nuo C iki A. Atvaizduokite grafiškai. Kas pasikeitė? Kintamasis mano_kategorijos buvo sukurtas šio skyriaus pavyzdžiuose. Įvykdykite funkciją unclass(mano_kategorijos). Kaip galėtumėte paaiškinti rezultatą? (Užrašę ?unclass gauname tokį paaiškinimą: „unclass returns (a copy of) its argument with its class attribute removed.“) Įvykdykite kodą šiame skyriuje sukurtiems kintamiesiems: str(ranginis) str(mano_kategorijos) 4.5 R duomenų struktūros Terminas „duomenų struktūra“ nurodo formą, kuria saugomi duomenys. Jei duomenis prilygintume mėgintuvėliams, tai duomenų struktūros būtų tam tikro tipo dėžutės ir laikikliai, skirti tam tikru būdu mėgintuvėlius išdėlioti ir saugoti. Programoje „R“ yra 4 pagrindinės duomenų struktūros: (atominis) vektorius (vector) – tai to paties duomenų tipo reikšmių seka. (Žodis „atominis“ ir reiškia, kad duomenys yra vieno tipo). Neturi nei eilučių, nei stulpelių. Ši duomenų struktūra atitinka duomenų eilutę arba kintamąjį statistikos prasme. Mūsų kurso metu ši struktūra yra labai svarbi. Pavyzdys: į vektorių surašomi visų Gyvybės mokslų centro (GMC) studentų ūgiai. Kitas pavyzdys, į vektorių surašomos visų GMC dėstytojų plaukų spalvos. matrica (matrix) – tai lentelės pavidalo duomenų struktūra, sudaryta tik iš vieno tipo duomenų. Turi eilutes ir stulpelius. Iš skaitinių reikšmių sudarytos matricos atitinka matricas, apie kurias mokėmės per matematikos kursą universitete. Naudojantis jomis efektyviai sprendžiami tiesinės algebros uždaviniai, pvz., atliekama pagrindinių komponentų ar klasterinė analizės. duomenų lentelė (data.frame) – tai lentelės pavidalo duomenų struktūra (turi eilutes ir stulpelius), kurios visi stulpeliai yra vienodo ilgio. Nuo matricos skiriasi tuo, kad skirtinguose stulpeliuose gali būti skirtingo tipo duomenys, tačiau tame pačiame stulpelyje būna tik to paties tipo duomenys. T. y., duomenų lentelės stulpeliai yra vienodo ilgio (atominiai) vektoriai. Tai pagrindinė duomenų struktūra, su kuria dirbsime šio kurso metu. Pavyzdys. Duomenų lentelė sudaryta iš 3 stulpelių: pirmame studentų ūgiai, antrame – tų pačių studentų plaukų spalvos, trečiame – vėlgi tų pačių studentų matematikos egzamino pažymiai. sąrašas (list) – tai duomenų struktūra, kurios kiekvienas elementas gali būti skirtingo ilgio ir talpinti skirtingo tipo duomenis. Paprasčiausiu atveju kiekvienas elementas yra skirtingo ilgio ir duomenų tipo vektorius. Tačiau bendruoju atveju, kiekvienas sąrašo elementas yra tarsi atskiras konteineris, kuris gali talpinti skirtingas duomenų struktūras (vektorius, matricas, duomenų lenteles ar net kitus sąrašus). Tokiu būdu dažnai mums atsakymus pateikia įvairios „R“ statistinės analizės funkcijos. Pavyzdys. Sąrašas sudarytas iš 3 elementų: tiriamojo vardas, tiriamojo amžius, tiriamojo vaikų vardai. Akivaizdu, kad vardas ir amžius – skirtingi duomenų tipai. O vaikų skaičius skirtingas, todėl šis elementas kiekvieno tiriamojo atveju bus ne vienodo ilgio. Šio kurso metu svarbiausios duomenų struktūros – vektoriai ir duomenų lentelės. 4.6 Klausimai savikontrolei Užduotis 4.17 Kokie skliaustai (apvalieji, laužtiniai, riestiniai ar trikampiai) rašomi po „R“ funkcijų (komandų) pavadinimų? Kokiu simboliu žymimi „R“ kalbos komentarai? Kuo panašios ir kuo skiriasi šios „R“ programos duomenų struktūros: „R“ vektoriai, „R“ matricos, „R“ sąrašai (lists) ir duomenų lentelės (data.frames)? Lyginkite duomenų tipus, kurie gali būti saugomi šiose struktūrose, duomenų išdėstymo būdą bei kur šios struktūros gali būti panaudotos. Kaip apibūdintumėte, kas yra funkcijos argumentas? Kaip programoje „R“ užrašomos loginės reikšmės „tiesa“ ir „netiesa“? Kas yra „R“ konsolė? Ką ji daro? Ką reiškia užrašai 1e4 bei 9e-4? Kaip rekomenduojama rašyti „R“ objektų pavadinimus? Pateikite 2 tokių pavadinimų pavyzdžius. Kur – matricoje ar duomenų lentelėje – gali būti skirtingų tipų (pvz., ir skaičiai, ir faktoriai, ir tekstas) duomenys? Ar duomenų lentelėje visi stulpeliai būtinai privalo būti vienodo ilgio? Kokie „R“ operatoriai atlieka šias operacijas: objekto kūrimas (reikšmės priskyrimas)? Ką „R“ programos kode reiškia simbolis #? Iki kur jis galioja? Nuo kur nebegalioja? Kokie „R“ duomenų tipai yra svarbiausi šiam kursui? Žinokite jų pavadinimus ir lietuvių, ir anglų kalba. Kokios „R“ klasės tinkamos skaitiniams tolydiesiems ir kokios skaitiniams diskretiesiems duomenis? Kokios „R“ klasės tinkamos kategoriniams duomenims? Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["r-paketai.html", "5. R paketai 5.1 Paketų užkrovimas 5.2 RStudio langas Packages 5.3 R paketų saugyklos 5.4 Apie paketų diegimą 5.5 Funkcijų naudojimas neužkrovus paketų 5.6 Plačiau apie paketus Klausimai ir komentarai", " 5. R paketai Įsivaizduokite, kad įsigijote naują mobilųjį telefoną (pav. 5.1). Kas jame įdiegta? Na, galima sakyti, kad jis yra „tuščias“: sistema, pvz., „Android“, tam, kad telefonas veiktų apskritai, bei kelios programėlės, kad galėtumėte paskambinti, parašyti žinutę ar aplankyti interneto tinklalapį. Ką darote? Ogi einate į svetainę, tokią kaip „Google Play“ (ar kitą priklausomai nuo kompanijos, pagaminusios telefoną), ir atsisiunčiate naujausias ir jums patogiausias programėles, taip išplėsdami savo išmaniojo įrenginio galimybes. „R“ – lyg naujas išmanusis telefonas „R“ paketai – tarsi programėlės, kurias galima parsisiųsti Pav. 5.1: Analogija tarp „R“, „R“ paketų ir mobiliojo telefono. Iliustracijos šaltinis: Panašiai yra ir su programa „R“. Pati programa turi tik bazines funkcijas, todėl užima gana nedaug vietos. Šių funkcijų gali ir užtekti. Visgi, kai kurie naudotojai nori labiau jų poreikiams pritaikytos programos. Turbūt nenustebsite, kad ekonomistams, psichologams, biologams ir kitų sričių specialistams reikalingi šiek tiek kitokie statistinės analizės aspektai. Dėl šių priežasčių programos „R“ galimybes galima smarkiai išplėsti papildiniais, kurie vadinami paketais (angl. packages). Tai tarsi programėlės mobiliojo telefono pavyzdyje. Du svarbūs dalykai susiję su „R“ paketais yra diegimas (angl., installation) ir užkrovimas (angl., loading). Dabar juos apžvelgsime. 5.1 Paketų užkrovimas Atidarius „R“, automatiškai užkraunami tik keli pagrindiniai paketai. Visus likusius užsikrauname, kai jų prireikia. (Juk ir įsijungę telefoną atsidarome ne visus „apps’us“ iš karto, o tik tuos, kuriuos tuo metu naudojame). Be to, paketus reikia užkrauti kiekvieną kartą iš naujo įjungus ar perkrovus „R“, nes kai programa išjungiama, išjungiami ir paketai. Paketus užkrauna komanda library(), kurios skliaustuose rašomas dominančio paketo pavadinimas. Alternatyva (kurios nerekomenduoju) – funkcija require(). Taip pat šiam tikslui skirtas „RStudio“ langas „Packages“. 5.2 RStudio langas Packages Programa „RStudio“ turi paketų valdymui (parsisiuntimui iš saugyklos CRAN, užkrovimui, pašalinimui iš kompiuterio ir kt.) skirtą langą. Paketų valdymo principai naudojant programą „RStudio“ pateikti 5.2. Pav. 5.2: Paketų užkrovimas naudojantis „RStudio“. Paaiškinimai tekste. Paveiksle 5.2 pateiktas pavyzdys, kaip naudojantis „RStudio“ surandamas ir užkraunamas paketas dplyr (A, B, C). Pirma, lango „Packages“ (A) paieškos laukelyje (B) surenkame visą ar dalį paketo pavadinimo. Paketų sąrašas susiaurėja. Sąraše rodomi paketų pavadinimai (pvz., dplyr), aprašymas ir versija (pvz., 0.7.3). Ties norimo paketo pavadinimu uždėję varnelę (C), paketą užkrauname (prijungiame) ir galime naudoti jo funkcijas. Šią varnelę nuėmę, paketą atjungiame ir jo funkcijų naudoti nebegalime. Paspaudus mygtuką, pažymėtą „D“, ištuštinamas paieškos laukelis (B). Paspaudus „Update“ (G) saugykloje „CRAN“ ieškoma, ar yra įdiegtų paketų atnaujinimų: jei yra, programa paklausia, kuriuos paketus norite atnaujinti. Jei paketą neseniai įdiegėme ar atnaujinome ir jo sąraše nesimato, sąrašą galime atnaujinti paspaudę mygtuką, pažymėtą „E“. Jei paspausime mygtuką ties „F“, tada paketas bus pašalintas iš kompiuterio visam laikui (na, iki tol, kol įdiegsime iš naujo). Užduotis 5.1 Naudodamiesi „RStudio“ langu „Packages“: Patikrinkite, ar užkrautas paketas base (jei teisingai ieškosite, paketas bus sąrašo apačioje). Patikrinkite, ar įdiegtas paketas tidyverse. Patikrinkite, ar įdiegtas paketas DescTools. 5.3 R paketų saugyklos Pirmą kartą įsidiegus „R“ ir „RStudio“, į kompiuterį įdiegiami tik keli baziniai paketai. Kai prireikia papildomų, juos reikia atsisiųsti atskirai. Kaip ir telefono programėles, paketus užtenka atsisiųsti vieną kartą (nebent norite atnaujinti). Yra kelios pagrindinės „R“ paketų saugyklos: „CRAN“ (Comperhensive R Archive Network) – pagrindinė saugykla, kurioje esantys paketai turi atitikti tam tikrus kokybės standartus. Jose esančios paketų versijos yra stabilios. Iš čia parsisiuntėme „R“. Iš čia paketus siunčiamės dažniausiai. „Bioconductor“ – tai specializuota saugykla bioinformatikos analizei skirtiems „R“ paketams. „GtiHub“ saugyklos, kuriose galima rasti ne tik „R“, bet ir kitų programų papildinių. Čia įprastai saugomos vis dar kuriamos bei tobulinamos (angl. development) „R“ paketų versijos, tad jos įprastai yra naujesnės, nei „CRAN“’e. Bet nebūtinai stabilios (t. y., gali turėti dar neišspręstų problemų). Yra ir kitų saugyklų. 5.4 Apie paketų diegimą Jei paketo jūsų kompiuteryje nėra, tada jį reikia atsisiųsti ir įsidiegti. Yra keletas vietų (saugyklų), iš kur paketai gali būti atsiųsti. Dėl šios priežasties kiekvienai saugyklai turi būti naudojamas vis kitoks kodas. 5.4.1 Diegimas iš CRAN Diegimui iš „CRAN“ naudojama funkcija install.packages(), kurios skliaustuose kabutėse nurodomas dominančio paketo pavadinimas, pvz.: install.packages(&quot;remotes&quot;) Apie paketų diegimą iš „CRAN“ taip pat rašoma skyriuje „1.4 R paketų diegimas“. 5.4.2 Diegimas iš GitHub Jei norime diegti kelis paketus iš karto, juos nurodome kaip tekstinių reikšmių seką (naudojame funkciją c()): install.packages(c(&quot;remotes&quot;, &quot;devtools&quot;)) Norint diegti iš kitur, prieš tai reikia būti atsisiuntus paketą remotes (arba devtools). Tada diegdami, pvz., iš „GtiHub“, naudojame komandą remotes::install_github(). Funkcijos skliaustuose įrašome vartotojo vardą (kurio paketą diegsimės) ir saugyklos pavadinimą tokiu formatu &quot;vartotojas/saugykla&quot;, pvz.: remotes::install_github(&quot;Rapporter/pander&quot;) Šis kodas iš vartotojo Rapporter saugyklos „pander“ parsiunčia paketą pander. Seniau paketų atsiuntimui naudojamos funkcijos buvo pakete devtools. Tačiau kūrėjai jas perkėlė į remotes, o iš šio paketo importuoja į devtools. Tai reiškia, kad tiek naujoji komanda remotes::install_github(), tiek senoji devtools::install_github() veiks. 5.5 Funkcijų naudojimas neužkrovus paketų Norėdami naudoti funkciją neužkrovus paketo arba norėdami programai „R“ nurodyti, kad būtų naudojama funkcija iš konkretaus paketo, jei yra kelios vienodą pavadinimą turinčios funkcijos, naudosime operatorių :: tokiu stiliumi: paketas::funkcija(). Pvz., remotes::install_github(). Tolimesnė šio skyriaus medžiaga vis dar rengiama! –&gt; 5.6 Plačiau apie paketus Išsamesnė informacija apie „R“ paketus pradedantiesiems pateikta straipsnyje „R Packages: A Beginner’s Guide“ . Apie paketų kūrimą rašoma knygoje „R packages“ . Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["zodynai.html", "A Žodynėliai A.1 Kompiuterijos terminai A.2 Programavimo ir matematikos terminai (anglų-lietuvių) A.3 Simbolių pavadinimai (anglų-lietuvių) A.4 Statistikos terminai (aiškinamasis žodynas) A.5 Statistikos terminai (anglų-lietuvių) Klausimai ir komentarai", " A Žodynėliai A.1 Kompiuterijos terminai Anglų–lietuvių kalbų kompiuterijos žodynas Enciklopedinis kompiuterijos žodynas A.2 Programavimo ir matematikos terminai (anglų-lietuvių) A.3 Simbolių pavadinimai (anglų-lietuvių) A.4 Statistikos terminai (aiškinamasis žodynas) Žodynėlis (statistikos terminai) A.5 Statistikos terminai (anglų-lietuvių) Klausimai ir komentarai Please enable JavaScript to view the comments powered by Disqus. "],
["priedas-r-sesijos-info.html", "B R sesijos informacija", " B R sesijos informacija „R“ ir šios programos paketų versijos bei kita techninė darbo programa „R“ sesijos informacija šios svetainės kūrimo metu. devtools::session_info() ## - Session info ----------------------------------------------------------------------------------- ## setting value ## version R version 3.5.2 (2018-12-20) ## os Windows 10 x64 ## system x86_64, mingw32 ## ui RStudio ## language (EN) ## collate Lithuanian_Lithuania.1257 ## ctype Lithuanian_Lithuania.1257 ## tz Europe/Helsinki ## date 2019-02-10 ## ## - Packages --------------------------------------------------------------------------------------- ## ! package * version date lib source ## assertthat 0.2.0 2017-04-11 [1] CRAN (R 3.5.0) ## backports 1.1.3 2018-12-14 [1] CRAN (R 3.5.1) ## bookdown 0.9 2018-12-21 [1] CRAN (R 3.5.2) ## broom 0.5.1.9000 2019-02-05 [1] Github (tidymodels/broom@66411c4) ## callr 3.1.1 2018-12-21 [1] CRAN (R 3.5.2) ## cellranger 1.1.0.9000 2018-05-21 [1] Github (rsheets/cellranger@7ecde54) ## cli 1.0.1 2018-09-25 [1] CRAN (R 3.5.1) ## colorspace 1.4-0 2019-01-13 [1] CRAN (R 3.5.2) ## crayon 1.3.4 2017-09-16 [1] CRAN (R 3.5.1) ## crosstalk 1.0.0 2016-12-21 [1] CRAN (R 3.5.0) ## desc 1.2.0 2018-05-01 [1] CRAN (R 3.5.0) ## devtools 2.0.1 2018-10-26 [1] CRAN (R 3.5.1) ## digest 0.6.18 2018-10-10 [1] CRAN (R 3.5.1) ## dplyr 0.8.0 2019-01-28 [1] Github (tidyverse/dplyr@cf0e282) ## evaluate 0.12 2018-10-09 [1] CRAN (R 3.5.1) ## forcats 0.3.0 2018-02-19 [1] CRAN (R 3.5.0) ## fs 1.2.6 2018-08-23 [1] CRAN (R 3.5.1) ## generics 0.0.2 2018-12-09 [1] Github (r-lib/generics@d59e6b4) ## ggplot2 3.1.0 2018-10-25 [1] CRAN (R 3.5.1) ## glue 1.3.0 2018-07-17 [1] CRAN (R 3.5.1) ## gtable 0.2.0 2016-02-26 [1] CRAN (R 3.5.0) ## haven 2.0.0 2018-11-22 [1] CRAN (R 3.5.1) ## highr 0.7 2018-06-09 [1] CRAN (R 3.5.0) ## hms 0.4.2.9001 2019-02-05 [1] Github (tidyverse/hms@cb175bb) ## htmltools 0.3.6 2017-04-28 [1] CRAN (R 3.5.0) ## htmlwidgets 1.3 2018-09-30 [1] CRAN (R 3.5.1) ## httpuv 1.4.5.1 2018-12-18 [1] CRAN (R 3.5.2) ## httr 1.4.0 2018-12-11 [1] CRAN (R 3.5.1) ## icon 0.1.0 2018-09-18 [1] Github (ropenscilabs/icon@a510f88) ## jpeg 0.1-8 2014-01-23 [1] CRAN (R 3.5.0) ## jsonlite 1.6 2018-12-07 [1] CRAN (R 3.5.1) ## knitr 1.21.7 2019-02-05 [1] Github (yihui/knitr@57cee67) ## later 0.7.5 2018-09-18 [1] CRAN (R 3.5.1) ## lazyeval 0.2.1 2017-10-29 [1] CRAN (R 3.5.0) ## lubridate 1.7.4 2018-04-11 [1] CRAN (R 3.5.0) ## magrittr 1.5 2014-11-22 [1] CRAN (R 3.5.0) ## memoise 1.1.0 2017-04-21 [1] CRAN (R 3.5.0) ## mime 0.6 2018-10-05 [1] CRAN (R 3.5.1) ## modelr 0.1.3 2019-02-05 [1] CRAN (R 3.5.2) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 3.5.0) ## packrat 0.5.0 2018-11-14 [1] CRAN (R 3.5.1) ## pillar 1.3.1 2018-12-15 [1] CRAN (R 3.5.1) ## pkgbuild 1.0.2 2018-10-16 [1] CRAN (R 3.5.1) ## pkgconfig 2.0.2 2018-08-16 [1] CRAN (R 3.5.1) ## pkgload 1.0.2 2018-10-29 [1] CRAN (R 3.5.1) ## plyr 1.8.4 2016-06-08 [1] CRAN (R 3.5.0) ## png 0.1-7 2013-12-03 [1] CRAN (R 3.5.0) ## prettyunits 1.0.2 2015-07-13 [1] CRAN (R 3.5.0) ## processx 3.2.1 2018-12-05 [1] CRAN (R 3.5.1) ## promises 1.0.1 2018-04-13 [1] CRAN (R 3.5.0) ## ps 1.3.0 2018-12-21 [1] CRAN (R 3.5.2) ## purrr 0.3.0 2019-01-27 [1] CRAN (R 3.5.2) ## R.methodsS3 1.7.1 2016-02-16 [1] CRAN (R 3.5.0) ## R.oo 1.22.0 2018-04-22 [1] CRAN (R 3.5.0) ## R.utils 2.7.0 2018-08-27 [1] CRAN (R 3.5.1) ## R6 2.3.0 2018-10-04 [1] CRAN (R 3.5.1) ## Rcpp 1.0.0 2018-11-07 [1] CRAN (R 3.5.1) ## readr 1.3.1 2018-12-21 [1] CRAN (R 3.5.2) ## readxl 1.2.0 2018-12-19 [1] CRAN (R 3.5.2) ## remotes 2.0.2 2018-10-30 [1] CRAN (R 3.5.1) ## D rJava 0.9-10 2018-05-29 [1] CRAN (R 3.5.0) ## rlang 0.3.1 2019-01-08 [1] CRAN (R 3.5.2) ## rmarkdown 1.11.3 2019-02-05 [1] Github (rstudio/rmarkdown@c6b361f) ## rprojroot 1.3-2 2018-01-03 [1] CRAN (R 3.5.0) ## rstudioapi 0.9.0 2019-01-09 [1] CRAN (R 3.5.2) ## rvest 0.3.2 2016-06-17 [1] CRAN (R 3.5.0) ## scales 1.0.0 2018-08-09 [1] CRAN (R 3.5.1) ## sessioninfo 1.1.1.9000 2018-12-01 [1] Github (r-lib/sessioninfo@ac8fcc1) ## shiny 1.2.0 2018-11-02 [1] CRAN (R 3.5.1) ## stringi 1.2.4 2018-07-20 [1] CRAN (R 3.5.1) ## stringr 1.3.1 2018-05-10 [1] CRAN (R 3.5.0) ## testthat 2.0.1 2018-10-13 [1] CRAN (R 3.5.1) ## tibble 2.0.1 2019-01-12 [1] CRAN (R 3.5.2) ## tidyr 0.8.2 2018-10-28 [1] CRAN (R 3.5.1) ## tidyselect 0.2.5 2018-10-11 [1] CRAN (R 3.5.1) ## usethis 1.4.0 2018-08-14 [1] CRAN (R 3.5.1) ## withr 2.1.2 2018-03-15 [1] CRAN (R 3.5.1) ## xfun 0.4 2018-10-23 [1] CRAN (R 3.5.1) ## xlsx 0.6.1 2018-06-11 [1] CRAN (R 3.5.0) ## xlsxjars 0.6.1 2014-08-22 [1] CRAN (R 3.5.0) ## xml2 1.2.0.9000 2018-11-20 [1] Github (hadley/xml2@de9781d) ## xtable 1.8-3 2018-08-29 [1] CRAN (R 3.5.1) ## yaml 2.2.0 2018-07-25 [1] CRAN (R 3.5.1) ## ## [1] D:/Dokumentai/R/win-library/3.5 ## [2] C:/Program Files/R/R-3.5.2/library ## ## D -- DLL MD5 mismatch, broken installation. "],
["saltiniai.html", "Informacijos šaltiniai", " Informacijos šaltiniai "]
]
